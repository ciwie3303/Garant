# -*- coding: utf-8 -*-
from decimal import *
import telebot
import datetime
from telebot import types, apihelper
import sqlite3
import config
import random
import time
import os,random,shutil,subprocess
import json
#from Light_Qiwi import Qiwi, OperationType
import keyboards
import requests
from datetime import datetime, timedelta
# BOT

bot = telebot.TeleBot(config.bot_token)
global users_id_otziv

@bot.message_handler(content_types=['new_chat_members'])
def greeting(message):
	connection = sqlite3.connect('database.sqlite')
	q = connection.cursor()
	q = q.execute('SELECT * FROM chat_garant WHERE chat_id IS '+str(message.chat.id))
	row = q.fetchone()
	if row is None:
		bot.send_message(message.chat.id, f'''id —á–∞—Ç–∞: <code>{message.chat.id}</code>''' ,parse_mode='HTML')

@bot.message_handler(commands=['start'])
def start_message(message):
	if message.chat.type == 'private':
		userid = str(message.chat.id)
		print(message.text)
		username = str(message.from_user.username)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q = q.execute('SELECT * FROM ugc_users WHERE id IS '+str(userid))
		row = q.fetchone()
		if row is None:
			now = datetime.now()
			now_date = str(str(now)[:10])
			q.execute("INSERT INTO ugc_users (id,name,data_reg) VALUES ('%s', '%s', '%s')"%(userid,username,now_date))
			connection.commit()
			bot.send_message(message.chat.id,f'''üíå –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, @| <a href="tg://user?id={message.chat.id}">{message.chat.first_name}</a>

‚ùáÔ∏è‚ùóÔ∏èüåê –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª—É—á—à–∏–π –±–æ—Ç-–∞–≤—Ç–æ–≥–∞—Ä–∞–Ω—Ç –≤ —Ç–µ–ª–µ–≥—Ä–∞–º, –Ω–∞–±–ª—é–¥–∞—è –∑–∞ –±–æ—Ç–æ–º SAVE CLICK, –≤—ã —É–≤–∏–¥–∏—Ç–µ –µ—â–µ –º–Ω–æ–≥–æ –Ω–æ–≤–≤–æ–≤–µ–¥–µ–Ω–∏–π, –Ω–∞—Ü–µ–ª–µ–Ω–Ω—ã—Ö –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –±–æ—Ç–∞ –∏ –µ–≥–æ –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞. 

ü§ñ–ú–æ—è —Ü–µ–ª—å - —Å–æ–∑–¥–∞—Ç—å –∫–æ–º—Ñ–æ—Ä—Ç–Ω—É—é –±–µ–∑–æ–ø–∞—Å–Ω—É—é —Ç–æ—Ä–≥–æ–≤—É—é —Å—Ä–µ–¥—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

üíü–ú—ã –±—É–¥–µ–º —Ä–∞–¥—ã –≤—ã—Å–ª—É—à–∞—Ç—å –≤–∞—à–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è –ø–æ –±–æ—Ç—É. –í–æ–ø—Ä–æ—Å—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é SAVE CLICK –≤—ã —Ç–∞–∫ –∂–µ –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å:
@saveclickmemento

‚ú®–°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–∞–º–∏, –≤–∞—Å –∂–¥–µ—Ç –µ—â–µ –º–Ω–æ–≥–æ –Ω–æ–≤–æ–≥–æ!

üíô–°–ø–∞—Å–∏–±–æ —á—Ç–æ –æ—Å—Ç–∞–µ—Ç–µ—Å—å —Å –Ω–∞–º–∏.
üíµ–£–¥–∞—á–∏ –≤ —Å–¥–µ–ª–∫–∞—Ö!''',parse_mode='HTML',disable_web_page_preview = True, reply_markup=keyboards.main)
			if message.text[7:] != '':
				if message.text[7:] != message.chat.id:
					q.execute("update ugc_users set ref = " + str(message.text[7:])+ " where id = " + str(message.chat.id))
					connection.commit()
					q.execute("update ugc_users set ref_colvo =ref_colvo + 1 where id = " + str(message.text[7:]))
					connection.commit()
					bot.send_message(message.text[7:], f'–ù–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª! <a href="tg://user?id={message.chat.id}">{message.chat.first_name}</a>',parse_mode='HTML', reply_markup=keyboards.main)
		else:
			bot.send_message(message.chat.id, f'''üíå –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <a href="tg://user?id={message.chat.id}">{message.chat.first_name}</a>

‚ùáÔ∏è‚ùóÔ∏èüåê –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª—É—á—à–∏–π –±–æ—Ç-–∞–≤—Ç–æ–≥–∞—Ä–∞–Ω—Ç –≤ —Ç–µ–ª–µ–≥—Ä–∞–º, –Ω–∞–±–ª—é–¥–∞—è –∑–∞ –±–æ—Ç–æ–º SAVE CLICK, –≤—ã —É–≤–∏–¥–∏—Ç–µ –µ—â–µ –º–Ω–æ–≥–æ –Ω–æ–≤–≤–æ–≤–µ–¥–µ–Ω–∏–π, –Ω–∞—Ü–µ–ª–µ–Ω–Ω—ã—Ö –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –±–æ—Ç–∞ –∏ –µ–≥–æ –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞. 

ü§ñ–ú–æ—è —Ü–µ–ª—å - —Å–æ–∑–¥–∞—Ç—å –∫–æ–º—Ñ–æ—Ä—Ç–Ω—É—é –±–µ–∑–æ–ø–∞—Å–Ω—É—é —Ç–æ—Ä–≥–æ–≤—É—é —Å—Ä–µ–¥—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

üíü–ú—ã –±—É–¥–µ–º —Ä–∞–¥—ã –≤—ã—Å–ª—É—à–∞—Ç—å –≤–∞—à–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è –ø–æ –±–æ—Ç—É. –í–æ–ø—Ä–æ—Å—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é SAVE CLICK –≤—ã —Ç–∞–∫ –∂–µ –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å:
@saveclickmemento

‚ú®–°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–∞–º–∏, –≤–∞—Å –∂–¥–µ—Ç –µ—â–µ –º–Ω–æ–≥–æ –Ω–æ–≤–æ–≥–æ!

üíô–°–ø–∞—Å–∏–±–æ —á—Ç–æ –æ—Å—Ç–∞–µ—Ç–µ—Å—å —Å –Ω–∞–º–∏.
üíµ–£–¥–∞—á–∏ –≤ —Å–¥–µ–ª–∫–∞—Ö!''',parse_mode='HTML',disable_web_page_preview = True, reply_markup=keyboards.main)

@bot.message_handler(commands=['garant'])
def garant(message):
	try:
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("SELECT balans FROM ugc_users where id is " + str(message.from_user.id))
		balanss = q.fetchone()
		if int(balanss[0]) >= int(message.text[8:].split(' ')[1]):
			q.execute("update ugc_users set balans = balans - "+str(message.text[8:].split(' ')[1])+" where id = " + str(message.from_user.id))
			connection.commit()
			foo = message.text[8:].split(' ')[0].upper() 
			foo = foo.replace("@", "")
			id_id = q.execute(f"SELECT id FROM ugc_users where name = '{foo.lower()}'").fetchone()[0]
			now = datetime.now()
			now_date = str(str(now)[:10])
			q.execute("INSERT INTO sdelki (user_create,user_invite,data,summa) VALUES ('%s', '%s', '%s', '%s')"%(message.from_user.id,id_id,now_date,message.text[8:].split(' ')[1]))
			connection.commit()
			user = message.text[8:].split(' ')[0]
			money = message.text[8:].split(' ')[1]
			q.execute(f"SELECT seq FROM sqlite_sequence where name = 'sdelki'")
			id_sdelka = q.fetchone()[0]
			bot.send_message(message.chat.id, f'''üî∞  {user} —É —Ç–µ–±—è –Ω–æ–≤–∞—è —Å–¥–µ–ª–∫–∞ –æ—Ç @{message.from_user.username} –Ω–∞ —Å—É–º–º—É {money} RUB, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ @SAVEGARANT_bot -> ü§ù –ú–æ–∏ —Å–¥–µ–ª–∫–∏''',parse_mode='HTML')
			bot.send_message(message.chat.id, f'''üî∞ –°–¥–µ–ª–∫–∞ #G{id_sdelka} –æ—Ç @{message.from_user.username} –¥–ª—è @{user}

üí∞ –°—É–º–º–∞ —Å–¥–µ–ª–∫–∏: {money} RUB''')
		else:
			bot.reply_to(message, '‚úñÔ∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –≤ @SAVEGARANT_bot -> üíª –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')

	except:	
		bot.reply_to(message, '‚úñÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ, –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç')


@bot.message_handler(content_types=['text'])
def send_text(message):
	connection = sqlite3.connect('database.sqlite')
	q = connection.cursor()
	q = q.execute('SELECT * FROM ugc_users WHERE id IS '+str(message.from_user.id))
	row = q.fetchone()
	if row is None:
		now = datetime.now()
		now_date = str(str(now)[:10])
		q.execute("INSERT INTO ugc_users (id,name,data_reg,chat_user) VALUES ('%s', '%s', '%s', '%s')"%(message.from_user.id,message.from_user.username.lower(),now_date,message.chat.id))
		connection.commit()
	connection = sqlite3.connect('database.sqlite')
	q = connection.cursor()
	username = str(message.from_user.username.lower())
	q.execute(f"SELECT name FROM ugc_users where id = '{message.from_user.id}'")
	name = q.fetchone()
	if str(name[0]) == str(username):
		pass
	else:
		bot.reply_to(message, '–í–∞—à —é–∑–µ—Ä–Ω–µ–π–º –æ–±–Ω–æ–≤–ª–µ–Ω')
		q.execute(f"update ugc_users set name = '{username}' where id = '{message.from_user.id}'")
		connection.commit()

	if message.chat.type == 'private':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		username = str(message.from_user.username.lower())
		q.execute(f"SELECT name FROM ugc_users where id = '{message.chat.id}'")
		name = q.fetchone()
		if str(name[0]) == str(username):
			pass
		else:
			bot.send_message(message.chat.id, '–í–∞—à —é–∑–µ—Ä–Ω–µ–π–º –æ–±–Ω–æ–≤–ª–µ–Ω')
			q.execute(f"update ugc_users set name = '{username}' where id = '{message.chat.id}'")
			connection.commit()

		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("SELECT status FROM ugc_users where id is " + str(message.chat.id))
		status = q.fetchone()
		if str(status[0]) == str('–ê–∫—Ç–∏–≤–µ–Ω'):

			

			if message.text.lower() == '/admin':
				if message.chat.id == config.admin:
					msg = bot.send_message(message.chat.id, '<b>–ü—Ä–∏–≤–µ—Ç, –∞–¥–º–∏–Ω!</b>',parse_mode='HTML', reply_markup=keyboards.admin)
					return

			elif message.text.lower() == 'gift':
				if message.chat.id == config.admin:
					msg= bot.send_message(message.chat.id, '''–ü—Ä–∏–∑
–ö–æ–ª–≤–æ —Å–¥–µ–ª–æ–∫
–í—Ä–µ–º—è''',parse_mode='HTML', reply_markup=keyboards.otmena)
					bot.register_next_step_handler(msg, add_gift)

			elif message.text.lower() == '–∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥':
				if message.chat.id == config.admin:
					connection = sqlite3.connect('database.sqlite')
					q = connection.cursor()
					q.execute("SELECT texts FROM avtopost  where id = "+str(1))
					texts = q.fetchone()[0]
					q.execute("SELECT timess FROM avtopost  where id = "+str(1))
					timess = q.fetchone()[0]
					keyboard = types.InlineKeyboardMarkup()
					keyboard.add(types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç',callback_data=f'–∏–∑–º–µ–Ω–∏—Ç—å—Ç–µ–∫—Å—Ç{1}'))
					keyboard.add(types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É',callback_data=f'–∏–∑–º–µ–Ω–∏—Ç—å—Ç–µ–∫—Å—Ç{2}'))
					keyboard.add(types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É',callback_data=f'–∏–∑–º–µ–Ω–∏—Ç—å—Ç–µ–∫—Å—Ç{3}'))
					bot.send_message(message.chat.id, f'''–¢–µ–∫—Å—Ç:
{texts}


–ó–∞–¥–µ—Ä–∂–∫–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö: {timess}''',parse_mode='HTML', reply_markup=keyboard)
					return

			elif message.text.lower() == '–Ω–∞—Å—Ç—Ä–æ–π–∫–∏':
				if message.chat.id == config.admin:
					connection = sqlite3.connect('database.sqlite')
					q = connection.cursor()
					q.execute("SELECT com_sdelka FROM config  where id = "+str(1))
					com_sdelka = q.fetchone()[0]
					q.execute("SELECT com_vvod FROM config  where id = "+str(1))
					com_vvod = q.fetchone()[0]
					q.execute("SELECT id_arbtr FROM config  where id = "+str(1))
					id_arbtr = q.fetchone()[0]
					q.execute("SELECT com_vivod FROM config  where id = "+str(1))
					com_vivod = q.fetchone()[0]
					q.execute("SELECT uv_dep FROM config  where id = "+str(1))
					uv_dep = q.fetchone()[0]
					q.execute("SELECT uv_arb FROM config  where id = "+str(1))
					uv_arb = q.fetchone()[0]
					q.execute("SELECT uv_sdelki FROM config  where id = "+str(1))
					uv_sdelki = q.fetchone()[0]
					q.execute("SELECT uv_vivod FROM config  where id = "+str(1))
					uv_vivod = q.fetchone()[0]
					qiwi_phone = q.execute("SELECT qiwi_phone FROM config where id = '1'").fetchone()[0]
					qiwi_token = q.execute("SELECT qiwi_token FROM config where id = '1'").fetchone()[0]
					keyboard = types.InlineKeyboardMarkup()
					keyboard.add(types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–º–∏—Å—Å–∏—é –∑–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ',callback_data=f'–∏–∑–º–µ–Ω–∏—Ç—å–∫–æ–º–º–∏—Å–∏—é{1}'))
					keyboard.add(types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–º–∏—Å—Å–∏—é –∑–∞ —Å–¥–µ–ª–∫–∏',callback_data=f'–∏–∑–º–µ–Ω–∏—Ç—å–∫–æ–º–º–∏—Å–∏—é{3}'))
					keyboard.add(types.InlineKeyboardButton(text='–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',callback_data=f'—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–Ω–∞—Å—Ç—Ä–æ–π–∫–∞'))
					keyboard.add(types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä YA',callback_data='–∏–∑–º–µ–Ω–∏—Ç—å–Ω–æ–º–µ—Ä_'),types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å Token YA',callback_data='–∏–∑–º–µ–Ω–∏—Ç—å—Ç–æ–∫–µ–Ω_'))
					keyboard.add(types.InlineKeyboardButton(text='–°–º–µ–Ω–∏—Ç—å –∞—Ä–±–∏—Ç—Ä–∞',callback_data=f'–∞—Ä–±–∏—Ç—Ä—ã—É–¥–∞–ª–∏—Ç—å{1}'))
					bot.send_message(message.chat.id, f'''–ö–æ–º–∏—Å—Å–∏—è –≤—ã–≤–æ–¥: <code>{com_vivod}</code> %
–ö–æ–º–∏—Å—Å–∏—è –∑–∞ —Å–¥–µ–ª–∫–∏: <code>{com_sdelka}</code> %

–ê—Ä–±–∏—Ç—Ä—ã: <code>{id_arbtr}</code>
–ù–æ–º–µ—Ä YA: <code>{qiwi_phone}</code>
–¢–æ–∫–µ–Ω YA: <code>{qiwi_token}</code>''',parse_mode='HTML', reply_markup=keyboard)
					return


			elif message.text.lower() == '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
				if message.chat.id == config.admin:
					connection = sqlite3.connect('database.sqlite')
					q = connection.cursor()
					now = datetime.now()
					now_date = str(str(now)[:10])
					all_user_count = q.execute(f'SELECT COUNT(id) FROM ugc_users').fetchone()[0]
					new_user_count = q.execute(f'SELECT COUNT(id) FROM ugc_users WHERE data_reg = "{now_date}"').fetchone()[0]
					all_buys_count = q.execute(f'SELECT COUNT(id) FROM sdelki').fetchone()[0]
					new_buys_count = q.execute(f'SELECT COUNT(id) FROM sdelki WHERE data = "{now_date}"').fetchone()[0]
					all_earn_count = q.execute(f'SELECT SUM(summa) FROM sdelki').fetchone()[0]
					
					bot.send_message(message.chat.id, f'''–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞:
–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {all_user_count}
–ù–æ–≤—ã—Ö –∑–∞ —Å–µ–≥–æ–¥–Ω—è: {new_user_count}

–í—Å–µ–≥–æ —Å–¥–µ–ª–æ–∫: {all_buys_count}
–°–¥–µ–ª–æ–∫ –∑–∞ —Å–µ–≥–æ–¥–Ω—è: {new_buys_count}

–°—É–º–º–∞ —Å–¥–µ–ª–æ–∫: {all_earn_count}''')
					return

			elif message.text.lower() == '–≤—ã–ø–ª–∞—Ç—ã':
				if message.chat.id == config.admin:
					connection = sqlite3.connect('database.sqlite')
					q = connection.cursor()
					keyboard = types.InlineKeyboardMarkup()
					q.execute("SELECT * FROM vivod where status = 'on'")
					row = q.fetchall()
					for i in row:
						keyboard.add(types.InlineKeyboardButton(text=f'{i[2]} | {i[3]}', callback_data=f'vivod_{i[0]}'))

					bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –Ω—É–Ω—ã–π: ", reply_markup=keyboard)
					return

			elif message.text.lower() == '–∞—Ä–±–∏—Ç—Ä–∞–∂–∏':
				if message.chat.id == config.admin:
					connection = sqlite3.connect('database.sqlite')
					q = connection.cursor()
					keyboard = types.InlineKeyboardMarkup()
					q.execute("SELECT * FROM sdelki where status = '–ê—Ä–±–∏—Ç—Ä–∞–∂'")
					row = q.fetchall()
					for i in row:
						keyboard.add(types.InlineKeyboardButton(text=i[0], callback_data=f'aaadddd_{i[0]}'))

					bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –Ω—É–Ω—ã–π: ", reply_markup=keyboard)
					return

			elif message.text.lower() == '/arb':
				connection = sqlite3.connect('database.sqlite')
				q = connection.cursor()
				q.execute("SELECT id_arbtr FROM config  where id = "+str(1))
				bot_ad = q.fetchone()[0]
				if message.chat.id == bot_ad:
					connection = sqlite3.connect('database.sqlite')
					q = connection.cursor()
					keyboard = types.InlineKeyboardMarkup()
					q.execute("SELECT * FROM sdelki where status = '–ê—Ä–±–∏—Ç—Ä–∞–∂'")
					row = q.fetchall()
					for i in row:
						keyboard.add(types.InlineKeyboardButton(text=i[0], callback_data=f'aaadddd_{i[0]}'))
					bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π: ", reply_markup=keyboard)
					return


			elif message.text.lower() == 'c–¥–µ–ª–∫–∏':
				if message.chat.id == config.admin:
					connection = sqlite3.connect('database.sqlite')
					q = connection.cursor()
					q.execute(f"SELECT * FROM sdelki")
					info = q.fetchall()
					rand = random.randint(10000000,99999999999)
					keyboard = types.InlineKeyboardMarkup()
					for i in info:
						q.execute(f"SELECT name FROM ugc_users where id = '{i[2]}'")
						iduser_sellname = q.fetchone()[0]
						q.execute(f"SELECT name FROM ugc_users where id = '{i[1]}'")
						idubuyname = q.fetchone()[0]
						doc = open(f'G{rand}.txt', 'a', encoding='utf8')
						doc.write(f'''ID: #G{i[0]} | –ü–æ–∫—É–ø–∞—Ç–µ–ª—å: @{idubuyname} | –ü—Ä–æ–¥–∞–≤–µ—Ü: @{iduser_sellname} | C—É–º–º–∞: {i[6]} | –î–∞—Ç–∞ {i[3]} | –°—Ç–∞—Ç—É—Å: {i[5]} \n''')
						doc.close()
					try:
						file = open(f'G{rand}.txt', encoding='utf8')
						bot.send_document(message.chat.id,file, caption='C–¥–µ–ª–∫–∏')
						file.close()
						os.remove(f'G{rand}.txt')
					except:
						bot.send_message(message.chat.id, '–°–¥–µ–µ–ª–∫–∏ –æ—Ç—Å—É–¥—Å—Ç–≤—É—é—Ç', reply_markup=keyboards.admin)
					return



			elif message.text.lower() == '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏':
				if message.chat.id == config.admin:
					keyboard = types.InlineKeyboardMarkup()
					keyboard.add(types.InlineKeyboardButton(text='–ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',callback_data='admin_search_user'))
					bot.send_message(message.chat.id, '<b>–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É</b>',parse_mode='HTML', reply_markup=keyboard)
					return

			elif message.text.lower() == '—Ä–∞—Å—Å—ã–ª–∫–∞':
				if message.chat.id == config.admin:
					keyboard = types.InlineKeyboardMarkup()
					keyboard.add(types.InlineKeyboardButton(text='–° –∫–∞—Ä—Ç–∏–Ω–æ–∫–π',callback_data=f'–†–∞—Å—Å—ã–ª–∫–∞{1}'))
					keyboard.add(types.InlineKeyboardButton(text='–° –≥–∏—Ñ',callback_data=f'–†–∞—Å—Å—ã–ª–∫–∞{2}'))
					keyboard.add(types.InlineKeyboardButton(text='–° –≤–∏–¥–µ–æ',callback_data=f'–†–∞—Å—Å—ã–ª–∫–∞{3}'))
					bot.send_message(message.chat.id, f'''–∫–∞–∫ –±—É–¥–µ–º —Ä–∞—Å—Å—ã–ª–∫–∞—Ç—å ?''',parse_mode='HTML', reply_markup=keyboard)
					return

			elif message.text.lower() == 'üî∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ —á–∞—Ç':
				keyboard = types.InlineKeyboardMarkup()
				keyboard.add(types.InlineKeyboardButton(text='–ß—Ç–æ —ç—Ç–æ —Ç–∞–∫–æ–µ ‚ÅâÔ∏è',callback_data='–∏–Ω—Ñ–æ—á–∞—Ç'))
				keyboard.add(types.InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤ —á–∞—Ç',callback_data='–¥–æ–±–∞–≤–∏—Ç—å–≤—á–∞—Ç'))
				bot.send_message(message.chat.id, '''üö™–í—ã –ø–æ–ø–∞–ª–∏ –≤ –º–µ–Ω—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞ –≤ —á–∞—Ç. 

‚è≥üí∞üõ°ü§ù–ë–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–æ –æ–ø–∞—Å–∞—Ç—å—Å—è —Å–∫–∞–º–µ—Ä–æ–≤ –≤ —á–∞—Ç–µ –∏ –∏—Å–∫–∞—Ç—å –≥–∞—Ä–∞–Ω—Ç–æ–≤ —Å –±–µ—à–µ–Ω–Ω—ã–º–∏ –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º–∏, –æ—Ç–Ω—ã–Ω–µ –±–æ—Ç–∞ SAVE CLICK –º–æ–∂–Ω–æ –≤–Ω–µ–¥—Ä—è—Ç—å –≤ –ª—é–±–æ–π —á–∞—Ç —Ç–µ–ª–µ–≥—Ä–∞–º.

‚ö†Ô∏è–í —á–∞—Ç–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 300 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.''', reply_markup=keyboard)
				return


			elif message.text.lower() == 'ü§ù –º–æ–∏ —Å–¥–µ–ª–∫–∏':
				keyboard = types.InlineKeyboardMarkup()
				keyboard.add(types.InlineKeyboardButton(text='üîê–ê–∫—Ç–∏–≤–Ω—ã–µ —Å–¥–µ–ª–∫–∏',callback_data='my_sdelki'),types.InlineKeyboardButton(text='üîí–ó–∞–∫—Ä—ã—Ç—ã–µ —Å–¥–µ–ª–∫–∏',callback_data='–∑–∞–∫—Ä—ã—Ç—ã–µ—Å–¥–µ–ª–∫–∏'))
				bot.send_message(message.chat.id, "–ö–∞–∫–∏–µ —Å–¥–µ–ª–∫–∏ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç: ", reply_markup=keyboard)
				return

			elif message.text.lower() == 'üîç –æ—Ç–∫—Ä—ã—Ç—å —Å–¥–µ–ª–∫—É':
				msg = bot.send_message(message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –≤ —Ñ–æ—Ä–º–∞—Ç–µ @username (–∫–∞–∫ –≤ –ø—Ä–æ—Ñ–∏–ª–µ)',parse_mode='HTML', reply_markup=keyboards.otmena)
				bot.register_next_step_handler(msg,searchuser)
				return

			elif message.text.lower() == 'üåê –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
				keyboard = types.InlineKeyboardMarkup()
				connection = sqlite3.connect('database.sqlite')
				q = connection.cursor()
				q.execute("SELECT url_ard FROM config  where id = "+str(1))
				url_ard = q.fetchone()[0]
				keyboard = types.InlineKeyboardMarkup()
				keyboard.add(types.InlineKeyboardButton(text='üßë‚Äç‚öñÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –∞—Ä–±–∏—Ç—Ä—É',url=url_ard))
				keyboard.add(types.InlineKeyboardButton(text='üóØ –ß–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ',url=f'https://t.me/joinchat/U7--P7Z7'))
				bot.send_message(message.chat.id, f'''<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–µ—Ä–≤–∏—Å–∞ –º–æ–≥—É—Ç –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å–¥–µ–ª–∫—É 24/7, —á—Ç–æ, —Å–æ–≥–ª–∞—Å–∏—Ç–µ—Å—å, –æ—á–µ–Ω—å —É–¥–æ–±–Ω–æ.

–û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã:</b><i>
‚ûñ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å–¥–µ–ª–∫–∏ 10 RUB
‚ûñ –û–ø–ª–∞—Ç–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è –≤ BTC BANKIR –∏ QIWI. –í—ã–ø–ª–∞—Ç–∞, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ, –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è —Ç–∞–∫–∂–µ
‚ûñ –ö–æ–º–∏—Å—Å–∏—è —Å–µ—Ä–≤–∏—Å–∞ 7%
‚ûñ –°—É–º–º–∞ —Å–¥–µ–ª–∫–∏ —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç—Å—è –≤ RUB –≤ –º–æ–º–µ–Ω—Ç –∑–∞–∫–ª—é—á–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏.</i>

<b>–û—Ç–∫—Ä—ã—Ç–∏–µ —Å–ø–æ—Ä–∞ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ì–∞—Ä–∞–Ω—Ç-–°–µ—Ä–≤–∏—Å–∞.</b>
<i>‚ûñ –£ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –∏ —É –ø—Ä–æ–¥–∞–≤—Ü–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–¥–µ–ª–∫–∏ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ "–û—Ç–∫—Ä—ã—Ç—å –∞—Ä–±–∏—Ç—Ä–∞–∂". –°–¥–µ–ª–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ —Å—Ç–∞—Ç—É—Å "–ê—Ä–±–∏—Ç—Ä–∞–∂". –ü—Ä–æ–¥–∞–≤–µ—Ü –∏–ª–∏ –ø–æ–∫—É–ø–∞—Ç–µ–ª—å –¥–æ–ª–∂–Ω—ã –Ω–∞–ø–∏—Å–∞—Ç—å –ê—Ä–±–∏—Ç—Ä—É. –ü–æ—Å–ª–µ –≤—ã–Ω–µ—Å–µ–Ω–∏—è —Ä–µ—à–µ–Ω–∏—è - –¥–µ–Ω–µ–∂–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –ø–µ—Ä–µ–≤–æ–¥—è—Ç—Å—è.</i>


<b>–í–Ω–∏–º–∞–Ω–∏–µ! –°–¥–µ–ª–∫—É –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∞—Ç—å –ü–æ–∫—É–ø–∞—Ç–µ–ª—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–≤—à–∏—Å—å –ø–æ–∏—Å–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π! –≠—Ç–æ –≤–∞–∂–Ω—ã–π –º–æ–º–µ–Ω—Ç.</b>''' ,parse_mode='HTML',disable_web_page_preview = True, reply_markup=keyboards.main)
				return
			elif message.text.lower() == 'üìñ f.a.q':
				keyboard = types.InlineKeyboardMarkup()
				keyboard.add(types.InlineKeyboardButton(text='üßë‚Äç‚öñÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –∞—Ä–±–∏—Ç—Ä—É',url='https://t.me/'))
				keyboard.add(types.InlineKeyboardButton(text='üóØ –ß–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ',url=f'https://t.me//U7--P7Z7'))
				bot.send_message(message.chat.id, f'''üìñ–°—Ö–µ–º–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∞ —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º:

1. ‚úÖ–ü–æ–∫—É–ø–∞—Ç–µ–ª—å –ø–æ–ø–æ–ª–Ω—è–µ—Ç —Å–≤–æ–π —Å—á–µ—Ç –≤ –±–æ—Ç–µ –ª—é–±—ã–º –¥–æ—Å—Ç—É–ø–Ω—ã–º –∏ —É–¥–æ–±–Ω—ã–º –¥–ª—è —Å–µ–±—è —Å–ø–æ—Å–æ–±–æ–º.
2. ‚úÖ–ü–æ–∫—É–ø–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç –∫–Ω–æ–ø–∫—É ¬´–æ—Ç–∫—Ä—ã—Ç—å —Å–¥–µ–ª–∫—É¬ª.
3. ‚úÖ–ü–æ–∫—É–ø–∞—Ç–µ–ª—é –≤—ã—Å–≤–µ—á–∏–≤–∞–µ—Ç—Å—è –æ–∫–Ω–æ –≤–≤–æ–¥–∞ —é–∑–µ—Ä–Ω–µ–π–º–∞ –ø—Ä–æ–¥–∞–≤—Ü–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ —Å–¥–µ–ª–∫—É.
4. ‚úÖ–ü–æ—Å–ª–µ –≤–≤–æ–¥–∞ —é–∑–µ—Ä–Ω–µ–π–º–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—é –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —Å—É–º–º—É —Å–¥–µ–ª–∫–∏. –ü–æ–∫—É–ø–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –ø—Ä–æ–ø–∏—Å–∞—Ç—å —É—Å–ª–æ–≤–∏—è —Å–¥–µ–ª–∫–∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å, –∏–ª–∏ –∂–µ –≤—ã–±—Ä–∞—Ç—å —Å–¥–µ–ª–∫—É –±–µ–∑ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤.
5. ‚úÖ–ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–¥–∞–≤—Ü—É –ø—Ä–∏—Ö–æ–¥–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º —ç—Ç–∞–ø–µ —Å–¥–µ–ª–∫–∏, –∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –æ–∂–∏–¥–∞—Ç—å —Å–≤–æ–π —Ç–æ–≤–∞—Ä –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏.
6. ‚úÖ–ï—Å–ª–∏ —É—Å–ª–æ–≤–∏—è —Å–¥–µ–ª–∫–∏ —Å–æ–±–ª—é–¥–µ–Ω—ã –∏ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è —É—Å—Ç—Ä–æ–∏–ª —Ç–æ–≤–∞—Ä - –Ω–µ–æ–±—Ö–æ–¥–º–æ –æ—Ç–ø—É—Å—Ç–∏—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞.
7. ‚úÖ–ü—Ä–æ–¥–∞–≤—Ü—É –ø—Ä–∏—Ö–æ–¥–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —É—Å–ø–µ—à–Ω–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–¥–µ–ª–∫–∏, –ø–æ—Å–ª–µ —á–µ–≥–æ –ø—Ä–æ–¥–∞–≤–µ—Ü –∏–º–µ–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –ª—é–±—ã–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º.
üîÅ –ö–æ–º–∏—Å—Å–∏—è –±–æ—Ç–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: 7%.

üÜòüõÉ–í —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –ø–æ–∫—É–ø–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –æ—Å–ø–æ—Ä–∏—Ç—å —Å–¥–µ–ª–∫—É, –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏—è –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –æ–≥–æ–≤–æ—Ä–µ–Ω–Ω—ã–º–∏ –≤ —Å–¥–µ–ª–∫–µ, –ª–∏–±–æ –∂–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –ø—ã—Ç–∞—é—Ç—Å—è –æ–±–º–∞–Ω—É—Ç—å, –µ–º—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É ¬´–æ—Ç–∫—Ä—ã—Ç—å –∞—Ä–±–∏—Ç—Ä–∞–∂¬ª, –≤ —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã SAVE CLICK –æ—Ç–º–µ–Ω—è—Ç —Å–¥–µ–ª–∫—É –≤ –ø–æ–ª—å–∑—É –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –≤ —Ç–µ—á–µ–Ω–∏–∏ 10 –º–∏–Ω—É—Ç —Å –º–æ–º–µ–Ω—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏.

‚ùóÔ∏è–í–Ω–∏–º–∞–Ω–∏–µ! –°–¥–µ–ª–∫—É –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∞—Ç—å –ü–æ–∫—É–ø–∞—Ç–µ–ª—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–≤—à–∏—Å—å –ø–æ–∏—Å–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π! –≠—Ç–æ –≤–∞–∂–Ω—ã–π –º–æ–º–µ–Ω—Ç.

ü§ó–£–¥–∞—á–∏ –≤ —Å–¥–µ–ª–∫–∞—Ö!''',parse_mode='HTML', reply_markup=keyboard)
				return

			elif message.text.lower() == 'üö´ scam list':
				msg = bot.send_message(message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –≤ —Ñ–æ—Ä–º–∞—Ç–µ @username –∏–ª–∏ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',parse_mode='HTML', reply_markup=keyboards.otmena)
				bot.register_next_step_handler(msg,poisk_scam)


				return
			elif message.text.lower() == 'üé≤ –∏–≥—Ä—ã':
				bot.send_message(message.chat.id, f'''‚è≥ –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ......''',parse_mode='HTML', reply_markup=keyboards.main)
				return



			elif message.text.lower() == 'üíª –º–æ–π –ø—Ä–æ—Ñ–∏–ª—å':
				connection = sqlite3.connect('database.sqlite')
				q = connection.cursor()
				q.execute("SELECT balans FROM ugc_users where id is " + str(message.chat.id))
				balanss = q.fetchone()
				q.execute("SELECT data_reg FROM ugc_users where id is " + str(message.chat.id))
				data_reg = q.fetchone()
				q.execute("SELECT raiting FROM ugc_users where id is " + str(message.chat.id))
				raiting = q.fetchone()
				q.execute("SELECT sdelka_colvo FROM ugc_users where id is " + str(message.chat.id))
				sdelka_colvo = q.fetchone()
				q.execute("SELECT sdelka_summa FROM ugc_users where id is " + str(message.chat.id))
				sdelka_summa = q.fetchone()
				balance = balanss[0]
				curse = requests.get(f'https://blockchain.info/tobtc?currency=RUB&value={balance}').text
				urse = requests.get(f'https://blockchain.info/tobtc?currency=RUB&value={sdelka_summa[0]}').text
				covlotziv = q.execute(f'SELECT COUNT(id) FROM otziv  where user = {message.chat.id}').fetchone()[0]

				keyboard = types.InlineKeyboardMarkup()
				keyboard.add(types.InlineKeyboardButton(text='üî∫–ü–æ–ø–æ–ª–Ω–∏—Ç—å',callback_data=f'awhat_oplata'),types.InlineKeyboardButton(text='üîª–í—ã–≤–µ—Å—Ç–∏',callback_data=f'awhat_wind'))
				keyboard.add(types.InlineKeyboardButton(text='üë• –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞',callback_data='fereralka'))
				keyboard.add(types.InlineKeyboardButton(text='üéÅ –í–∞—É—á–µ—Ä—ã',callback_data='vau'))

				bot.send_message(message.chat.id, f'''
üÜî –í–∞—à ID: <code>{message.chat.id}</code>

üí∞ –ë–∞–ª–∞–Ω—Å: <code>{balance}</code> RUB | <code>{curse}</code> BTC

üìã –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–¥–µ–ª–æ–∫: <code>{sdelka_colvo[0]}</code>

üíé –°—É–º–º–∞ —Å–¥–µ–ª–æ–∫: <code>{sdelka_summa[0]}</code> RUB | <code>{urse}</code> BTC

üìä –†–µ–π—Ç–∏–Ω–≥: <code>{raiting[0]}</code> | üìÆ –û—Ç–∑—ã–≤–æ–≤: <code>{covlotziv}</code>

üóì –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {data_reg[0]}
''',parse_mode='HTML', reply_markup=keyboard)
				return


			bot.send_message(message.chat.id, '‚úñÔ∏è –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ !',parse_mode='HTML', reply_markup=keyboards.main)	

def poisk_scam(message):
	name_scam = message.text
	if name_scam != '–û—Ç–º–µ–Ω–∞':
		try:
			if len(name_scam) >= 5:
				name_scam = name_scam.lower()
				connection = sqlite3.connect('scamlist.sqlite')
				q = connection.cursor()
				q.execute("SELECT * FROM scamlist")
				row = q.fetchall()
				for i in row:
					word = i[1].lower()
					counter = len(word.split(name_scam))-1
					if int(counter) >= 1:
						bot.send_message(message.chat.id, i[1],parse_mode='HTML', reply_markup=keyboards.main)
						bot.send_message(message.chat.id, 'üö´ –í–æ–∑–º–æ–∂–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ scam –ª–∏—Å—Ç–µ, –ø–æ—Å—Ç –≤—ã—à–µ ‚¨ÜÔ∏è',parse_mode='HTML', reply_markup=keyboards.main)
						return
				bot.send_message(message.chat.id, '‚úÖ –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ',parse_mode='HTML', reply_markup=keyboards.main)
			else:
				bot.send_message(message.chat.id, '–ê—Ä–≥—É–º–µ–Ω—Ç—ã —É–∫–∞–∑–∞–Ω—ã –Ω–µ–≤–µ—Ä–Ω–æ!',parse_mode='HTML', reply_markup=keyboards.main)
		except:
			bot.send_message(message.chat.id, '–ê—Ä–≥—É–º–µ–Ω—Ç—ã —É–∫–∞–∑–∞–Ω—ã –Ω–µ–≤–µ—Ä–Ω–æ!',parse_mode='HTML', reply_markup=keyboards.main)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é',parse_mode='HTML', reply_markup=keyboards.main)

	
def add_gift(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text='‚úÖ –£—á–∞–≤—Å—Ç–≤–æ–≤–∞—Ç—å',callback_data=f'—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å–≥–∏—Ñ—Ç'))
		try:
			q.execute("INSERT INTO add_guft (priz,colvo,time) VALUES ('%s','%s','%s')"%(message.text.split('\n')[0],message.text.split('\n')[1],message.text.split('\n')[2]))
			connection.commit()
			time = int(message.text.split('\n')[2])/ 60
			prizz = message.text.split('\n')[0]
			colvosdelokkk = message.text.split('\n')[1]
			q.execute("SELECT * FROM ugc_users")
			row = q.fetchall()
			for i in row:
				try:
					bot.send_message(i[0], f'''‚ùóÔ∏è –î–∞–º—ã –∏ –≥–æ—Å–ø–æ–¥–∞, –≤–Ω–∏–º–∞–Ω–∏–µ ‚ùóÔ∏è

‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è–†–æ–∑—ã–≥—Ä—ã—à‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è

üí∞ –°—É–º–º–∞ —Ä–æ–∑—ã–≥—Ä—ã—à–∞: {prizz}
ü§ù –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–¥–µ–ª–æ–∫ –≤ –±–æ—Ç–µ: {colvosdelokkk}
‚è≥ –í—Ä–µ–º—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞: {time} –º–∏–Ω''', reply_markup=keyboard)
				except:
					pass

			bot.send_message(message.chat.id, '–ì–û–¢–û–í–û', reply_markup=keyboards.admin)
		except Exception as e:
			bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞', reply_markup=keyboards.admin)
		
	else:
		msg = bot.send_message(message.chat.id, '‚úñÔ∏è –í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é', reply_markup=keyboards.admin)

def new_chat(message):
	new_categ = message.text
	if new_categ != '–û—Ç–º–µ–Ω–∞':
		try:
			bot.send_message(new_categ, '‚úîÔ∏è –¢–µ–ø–µ—Ä—å –≤—Å–µ —Å–¥–µ–ª–∫–∏ —Å—Ç—Ä–æ–≥–æ —á–µ—Ä–µ–∑ –º–µ–Ω—è',parse_mode='HTML')
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			q = q.execute('SELECT * FROM chat_garant WHERE chat_id IS '+str(new_categ))
			row = q.fetchone()
			if row is None:
				q.execute("INSERT INTO chat_garant (chat_id,user) VALUES ('%s', '%s')"%(new_categ,message.chat.id))
				connection.commit()
				bot.send_message(message.chat.id, '‚úîÔ∏è –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª–∏ —á–∞—Ç.  —Ç–µ–ø–µ—Ä—å –≤—Å—è –∫–æ–º–∏—Å—Å–∏—è –∑–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞ –±—É–¥–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –∫ –≤–∞–º –Ω–∞ –±–∞–ª–∞–Ω—Å !',parse_mode='HTML', reply_markup=keyboards.main)
			else:
				bot.send_message(message.chat.id, '‚úñÔ∏è –û—à–∏–±–∫–∞, –±–æ—Ç —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –¥–∞–Ω–Ω—ã–π —á–∞—Ç.',parse_mode='HTML', reply_markup=keyboards.main)

		except:
			bot.send_message(message.chat.id, '‚úñÔ∏è –û—à–∏–±–∫–∞, –±–æ—Ç –Ω–µ –∞–¥–º–∏–Ω –∏–ª–∏ —á–∞—Ç —É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω–æ ',parse_mode='HTML', reply_markup=keyboards.main)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é',parse_mode='HTML', reply_markup=keyboards.main)

def new_admin(message):
	new_categ = message.text
	if new_categ != '–û—Ç–º–µ–Ω–∞':
		try:
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			q.execute(f"update config set id_arbtr = '{message.text}'")
			connection.commit()		
			connection.close()
			bot.send_message(message.chat.id, '–£—Å–ø–µ—à–Ω–æ!',parse_mode='HTML', reply_markup=keyboards.admin)
		except:
			bot.send_message(message.chat.id, '–ê—Ä–≥—É–º–µ–Ω—Ç—ã —É–∫–∞–∑–∞–Ω—ã –Ω–µ–≤–µ—Ä–Ω–æ!',parse_mode='HTML', reply_markup=keyboards.admin)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é',parse_mode='HTML', reply_markup=keyboards.admin)

def searchuser(message):
	if message.text.lower() != '–æ—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		foo = message.text.upper() 
		foo = foo.replace("@", "")
		q.execute(f"SELECT * FROM ugc_users where upper(name) = '{foo}'")
		row = q.fetchone()
		bot.send_message(message.chat.id, '<b>üîç –ò—â–µ–º...</b>',parse_mode='HTML', reply_markup=keyboards.main)
		username = str(message.from_user.username)
		if row != None:
			if str(username) == str(row[1]):
				keyboard = types.InlineKeyboardMarkup()
				q.execute(f"SELECT name FROM ugc_users where id = '{row[0]}'")
				iduser_sellname = q.fetchone()[0]
				urse = requests.get(f'https://blockchain.info/tobtc?currency=RUB&value={row[7]}').text
				covlotziv = q.execute(f'SELECT COUNT(id) FROM otziv  where user = {row[0]}').fetchone()[0]
				keyboard.add(types.InlineKeyboardButton(text=f'üìú –û—Ç–∑—ã–≤—ã ({covlotziv} —à—Ç.)',callback_data=f'–æ—Ç–∑—ã–≤—ã—Å–º–æ—Ç—Ä–µ—Ç—å{row[0]}'))
				msg = bot.send_message(message.chat.id, f'''<b>–ü–æ–¥—Ä–æ–±–Ω–µ–µ:</b>

üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{iduser_sellname}

üìã –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–¥–µ–ª–æ–∫: <code>{row[6]}</code>

üíé –°—É–º–º–∞ —Å–¥–µ–ª–æ–∫: <code>{row[7]}</code> RUB | <code>{urse}</code> BTC

üìä –†–µ–π—Ç–∏–Ω–≥: <code>{row[5]}</code> | üìÆ–û—Ç–∑—ã–≤–æ–≤: <code>{covlotziv}</code>

üóì –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {row[10]}
	''',parse_mode='HTML', reply_markup=keyboard)
			else:
				keyboard = types.InlineKeyboardMarkup()
				q.execute(f"SELECT name FROM ugc_users where id = '{row[0]}'")
				iduser_sellname = q.fetchone()[0]
				urse = requests.get(f'https://blockchain.info/tobtc?currency=RUB&value={row[7]}').text
				covlotziv = q.execute(f'SELECT COUNT(id) FROM otziv  where user = {row[0]}').fetchone()[0]
				keyboard.add(types.InlineKeyboardButton(text='üî∞ –û—Ç–∫—Ä—ã—Ç—å —Å–¥–µ–ª–∫—É',callback_data=f'–û—Ç–∫—Ä—ã—Ç—å—Å–¥–µ–ª–∫—É{row[0]}'))
				keyboard.add(types.InlineKeyboardButton(text=f'üìú –û—Ç–∑—ã–≤—ã ({covlotziv} —à—Ç.)',callback_data=f'–æ—Ç–∑—ã–≤—ã—Å–º–æ—Ç—Ä–µ—Ç—å{row[0]}'))
				msg = bot.send_message(message.chat.id, f'''<b>–ü–æ–¥—Ä–æ–±–Ω–µ–µ:</b>

üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{iduser_sellname}

üìã –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–¥–µ–ª–æ–∫: <code>{row[6]}</code>

üíé –°—É–º–º–∞ —Å–¥–µ–ª–æ–∫: <code>{row[7]}</code> RUB | <code>{urse}</code> BTC

üìä –†–µ–π—Ç–∏–Ω–≥: <code>{row[5]}</code> | üìÆ–û—Ç–∑—ã–≤–æ–≤: <code>{covlotziv}</code>

üóì –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {row[10]}
	''',parse_mode='HTML', reply_markup=keyboard)

		else:
			bot.send_message(message.chat.id, '<b>–ú—ã –Ω–µ –Ω–∞—à–ª–∏ —Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ!</b>',parse_mode='HTML', reply_markup=keyboards.main)
	else:
		bot.send_message(message.chat.id, '<b>–û—Ç–º–µ–Ω–∏–ª–∏</b>',parse_mode='HTML', reply_markup=keyboards.main)

def searchuserss(message):
	if message.text.lower() != '–æ—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute(f"SELECT * FROM ugc_users where upper(name) = '{message.text.upper()}'")
		row = q.fetchone()
		bot.send_message(message.chat.id, '<b>üîç –ò—â–µ–º...</b>',parse_mode='HTML', reply_markup=keyboards.main)
		username = str(message.from_user.username)
		if row != None:
			q.execute(f"SELECT name FROM ugc_users where id = '{row[0]}'")
			iduser_sellname = q.fetchone()[0]
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text='‚ûï –ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å',callback_data=f'–¥–æ–±–∞–≤–∏—Ç—å–±–∞–ª–∞–Ω—Å_{row[0]}'))
			keyboard.add(types.InlineKeyboardButton(text='üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å | –†–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å',callback_data=f'–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å_{row[0]}'))
			bot.send_message(message.chat.id, f'''<b>–ü–æ–¥—Ä–æ–±–Ω–µ–µ:</b>

<b>üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> @{iduser_sellname}

<b>‚ôªÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–¥–µ–ª–æ–∫:</b> <code>{row[6]}</code>

<b>üí≥ –°—É–º–º–∞ —Å–¥–µ–ª–æ–∫:</b> <code>{row[7]}</code>

<b>üìä –†–µ–π—Ç–∏–Ω–≥:</b> <code>{row[5]}</code>

<b>–°—Ç–∞—Ç—É—Å:</b> <code>{row[8]}</code>
''',parse_mode='HTML', reply_markup=keyboard)

		else:
			bot.send_message(message.chat.id, '<b>–ú—ã –Ω–µ –Ω–∞—à–ª–∏ —Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ!</b>',parse_mode='HTML', reply_markup=keyboards.main)
	else:
		bot.send_message(message.chat.id, '<b>–û—Ç–º–µ–Ω–∏–ª–∏</b>',parse_mode='HTML', reply_markup=keyboards.main)

def btc_oplata_1(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		if "https://telegram.me/BTC_CHANGE_BOT?" in str(message.text):
			q.execute("INSERT INTO BTC_CHANGE_BOT (text,user) VALUES ('%s','%s')"%(message.text,message.chat.id))
			connection.commit()
			bot.send_message(message.chat.id, 'üí∞ –ß–µ–∫ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è, –ø—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏ 1 –º–∏–Ω—É—Ç–∞, –≤–∞–º –ø—Ä–∏–¥–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.', reply_markup=keyboards.main)
			return
		if "https://telegram.me/LTC_CHANGE_BOT?" in str(message.text):
			q.execute("INSERT INTO LTC_CHANGE_BOT (text,user) VALUES ('%s','%s')"%(message.text,message.chat.id))
			connection.commit()
			bot.send_message(message.chat.id, 'üí∞ –ß–µ–∫ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è, –ø—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏ 1 –º–∏–Ω—É—Ç–∞, –≤–∞–º –ø—Ä–∏–¥–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.', reply_markup=keyboards.main)
			return
		if "https://telegram.me/ETH_CHANGE_BOT?" in str(message.text):
			q.execute("INSERT INTO ETH_CHANGE_BOT (text,user) VALUES ('%s','%s')"%(message.text,message.chat.id))
			connection.commit()
			bot.send_message(message.chat.id, 'üí∞ –ß–µ–∫ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è, –ø—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏ 1 –º–∏–Ω—É—Ç–∞, –≤–∞–º –ø—Ä–∏–¥–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.', reply_markup=keyboards.main)
			return
		else:

			msg = bot.send_message(message.chat.id, f'‚úñÔ∏è –ß–µ–∫ —É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω–æ!', reply_markup=keyboards.main)
	else:
		msg = bot.send_message(message.chat.id, '‚úñÔ∏è –í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é', reply_markup=keyboards.main)

def comsaedit(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute(f"update config set {str(comsa)} = '{message.text}' where id = '1'")
		connection.commit()
		msg = bot.send_message(message.chat.id, '<b>–£—Å–ø–µ—à–Ω–æ!</b>',parse_mode='HTML', reply_markup=keyboards.admin)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)

def postedit(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute(f"update avtopost set {str(idtexts)} = '{message.text}' where id = '1'")
		connection.commit()
		cmd = 'systemctl stop test.service'
		subprocess.Popen(cmd, shell=True)
		cmdd = 'systemctl start test.service'
		subprocess.Popen(cmdd, shell=True)
		msg = bot.send_message(message.chat.id, '<b>–£—Å–ø–µ—à–Ω–æ!</b>',parse_mode='HTML', reply_markup=keyboards.admin)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)


def smena_id_uv(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute(f"update config set {str(conf_uvs)} = '{message.text}' where id = '1'")
		connection.commit()
		msg = bot.send_message(message.chat.id, '<b>–£—Å–ø–µ—à–Ω–æ!</b>',parse_mode='HTML', reply_markup=keyboards.admin)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)


def send_photoorno(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		global text_send_all
		text_send_all = message.text
		msg = bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –º–µ–¥–∏–∞',parse_mode='HTML',disable_web_page_preview = True)
		bot.register_next_step_handler(msg, admin_send_message_all_text_rus)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)


def admin_send_message_all_text_rus(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		global media
		media = message.text
		if int(tipsend) == 1:
			msg = bot.send_photo(message.chat.id,str(media), "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:\n" + text_send_all +'\n\n–ï—Å–ª–∏ –≤—ã —Å–æ–≥–ª–∞—Å–Ω—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –î–∞',parse_mode='HTML')
			bot.register_next_step_handler(msg, admin_send_message_all_text_da_rus)
				
		if int(tipsend) == 2:
			print(tipsend)
			msg = bot.send_animation(chat_id=message.chat.id, animation=media, caption="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:\n" + text_send_all +'\n\n–ï—Å–ª–∏ –≤—ã —Å–æ–≥–ª–∞—Å–Ω—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –î–∞',parse_mode='HTML')
			bot.register_next_step_handler(msg, admin_send_message_all_text_da_rus)

		if int(tipsend) == 3:
			print(tipsend)
			media = f'<a href="{media}">.</a>'
			msg = bot.send_message(message.chat.id, f'''–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:
{text_send_all}
{media}
–ï—Å–ª–∏ –≤—ã —Å–æ–≥–ª–∞—Å–Ω—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –î–∞''',parse_mode='HTML')
			bot.register_next_step_handler(msg, admin_send_message_all_text_da_rus)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)

def admin_send_message_all_text_da_rus(message):
	otvet = message.text
	colvo_send_message_users = 0
	colvo_dont_send_message_users = 0
	if message.text != '–û—Ç–º–µ–Ω–∞':	
		if message.text.lower() == '–î–∞'.lower():
			connection = sqlite3.connect('database.sqlite')
			with connection:	
				q = connection.cursor()
				bot.send_message(message.chat.id, '–ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å!')
				if int(tipsend) == 1: # –∫–∞—Ä—Ç–∏–Ω–∫–∞
					q.execute("SELECT * FROM ugc_users")
					row = q.fetchall()
					for i in row:
						jobid = i[0]

						time.sleep(0.1)
						reply = json.dumps({'inline_keyboard': [[{'text': '‚úñÔ∏è –ó–∞–∫—Ä—ã—Ç—å', 'callback_data': f'restart'}]]})
						response = requests.post(
							url='https://api.telegram.org/bot{0}/{1}'.format(config.bot_token, "sendPhoto"),
							data={'chat_id': jobid,'photo': str(media), 'caption': str(text_send_all),'reply_markup': str(reply),'parse_mode': 'HTML'}
						).json()
						if response['ok'] == False:
							colvo_dont_send_message_users = colvo_dont_send_message_users + 1
						else:
							colvo_send_message_users = colvo_send_message_users + 1;
					bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: '+ str(colvo_send_message_users)+'\n–ù–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: '+ str(colvo_dont_send_message_users))	

				elif int(tipsend) == 2: # –≥–∏—Ñ
					q.execute("SELECT * FROM ugc_users")
					row = q.fetchall()
					for i in row:
						jobid = i[0]

						time.sleep(0.1)
						reply = json.dumps({'inline_keyboard': [[{'text': '‚úñÔ∏è –ó–∞–∫—Ä—ã—Ç—å', 'callback_data': f'restart'}]]})
						response = requests.post(
							url='https://api.telegram.org/bot{0}/{1}'.format(config.bot_token, "sendAnimation"),
							data={'chat_id': jobid,'animation': str(media), 'caption': str(text_send_all),'reply_markup': str(reply),'parse_mode': 'HTML'}
						).json()
						if response['ok'] == False:
							colvo_dont_send_message_users = colvo_dont_send_message_users + 1
						else:
							colvo_send_message_users = colvo_send_message_users + 1;
					bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: '+ str(colvo_send_message_users)+'\n–ù–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: '+ str(colvo_dont_send_message_users))	


				elif int(tipsend) == 3: # –≤–∏–¥–µ–æ
					q.execute("SELECT * FROM ugc_users")
					row = q.fetchall()
					for i in row:
						jobid = i[0]
						time.sleep(0.2)
						response = requests.post(
							url='https://api.telegram.org/bot{0}/{1}'.format(config.bot_token, "sendMessage"),
							data={'chat_id': jobid, 'text': str(text_send_all) + str(media),'parse_mode': 'HTML'}
						).json()
						if response['ok'] == False:
							colvo_dont_send_message_users = colvo_dont_send_message_users + 1
						else:
							colvo_send_message_users = colvo_send_message_users + 1;
					bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: '+ str(colvo_send_message_users)+'\n–ù–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: '+ str(colvo_dont_send_message_users))	
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)				



def add_money2(message):
   if message.text != '–û—Ç–º–µ–Ω–∞':
      connection = sqlite3.connect('database.sqlite')
      q = connection.cursor()
      q.execute("update ugc_users set balans = balans +" + str( message.text ) +  " where id =" + str(id_user_edit_bal1))
      connection.commit()
      msg = bot.send_message(message.chat.id, '–£—Å–ø–µ—à–Ω–æ!',parse_mode='HTML', reply_markup=keyboards.admin)
   else:
      bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)




def create_sdelka1(message):
	opisaniesdelka = message.text
	if message.text.isdigit() == True and int(message.text) >= 10:
		if opisaniesdelka != '–û—Ç–º–µ–Ω–∞':
				connection = sqlite3.connect('database.sqlite')
				q = connection.cursor()
				balanss = q.execute("SELECT balans FROM ugc_users where id is " + str(message.chat.id)).fetchone()[0]
				if int(balanss) >= int(message.text):
					q.execute(f"update ugc_users set balans = balans - '{message.text}' where id = '{message.chat.id}'")
					connection.commit()
					now = datetime.now()
					now_date = str(str(now)[:10])
					q.execute("INSERT INTO sdelki (user_create,user_invite,data,summa) VALUES ('%s', '%s', '%s', '%s')"%(message.chat.id,iduser_sell,now_date,opisaniesdelka))
					connection.commit()
					q.execute(f"SELECT name FROM ugc_users where id = '{iduser_sell}'")
					iduser_sellname = q.fetchone()[0]
					q.execute(f"SELECT name FROM ugc_users where id = '{message.chat.id}'")
					idubuyname = q.fetchone()[0]
					q.execute(f"SELECT seq FROM sqlite_sequence where name = 'sdelki'")
					id_sdelka = q.fetchone()[0]
					q.execute("SELECT uv_sdelki FROM config  where id = "+str(1))
					uv_sdelki = q.fetchone()[0]
					bot.send_message(uv_sdelki, f'''üî∞ –°–¥–µ–ª–∫–∞ #G{id_sdelka} –æ—Ç @{idubuyname} –¥–ª—è @{iduser_sellname}

üí∞ –°—É–º–º–∞ —Å–¥–µ–ª–∫–∏: {message.text} RUB''')
					bot.send_message(message.chat.id, f'''üî∞ –°–¥–µ–ª–∫–∞: #G{id_sdelka} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞, –ø—Ä–æ–¥–∞–≤–µ—Ü –ø–æ–ª—É—á–∏–ª –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ, –æ–∂–∏–¥–∞–π—Ç–µ —Ç–æ–≤–∞—Ä.''',parse_mode='HTML', reply_markup=keyboards.main)

					bot.send_message(iduser_sell, f'''üî∞ –ü–æ—Å—Ç—É–ø–∏–ª–∞ —Å–¥–µ–ª–∫–∞ –æ—Ç <a href="tg://user?id={message.chat.id}">{message.chat.first_name}</a>
üí∞ –°—É–º–º–∞ —Å–¥–µ–ª–∫–∏: <code>{message.text}</code> RUB

–ß—Ç–æ–±—ã –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Å–¥–µ–ª–∫–∏
–∏–ª–∏ –æ—Ç–∫—Ä—ã—Ç—å —Å–ø–æ—Ä - –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª 
ü§ù –ú–æ–∏ —Å–¥–µ–ª–∫–∏ >> üîê–ê–∫—Ç–∏–≤–Ω—ã–µ —Å–¥–µ–ª–∫–∏''',parse_mode='HTML', reply_markup=keyboards.main)
				else:
					bot.send_message(message.chat.id, '‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ!',parse_mode='HTML', reply_markup=keyboards.main)

		else:
			bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é',parse_mode='HTML', reply_markup=keyboards.main)
	else:
		bot.send_message(message.chat.id, '‚úñÔ∏è –í–≤–æ–¥–∏—Ç—å –Ω—É–∂–Ω–æ —á–∏—Å–ª–æ\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É', reply_markup=keyboards.main)





def vau_add(message):
	if message.content_type == 'text':
		if message.text.isdigit() == True and int(message.text) >= 1 and int(message.text) <= 99999999999999:
			if message.text != '–û—Ç–º–µ–Ω–∞':
				connection = sqlite3.connect('database.sqlite')
				q = connection.cursor()
				if message.text.isdigit() == True:
					connection = sqlite3.connect('database.sqlite')
					q = connection.cursor()
					q = q.execute("SELECT balans FROM ugc_users WHERE id = "+str(message.chat.id))
					check_balans = q.fetchone()
					if float(check_balans[0]) >= int(message.text):
							colvo = 1
							dlina = 10
							chars = 'abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'
							for ttt in range(1):
								for n in range(10):
									id_sdelka =''
								for i in range(int(dlina)):
									id_sdelka += random.choice(chars)
							print(id_sdelka)
							q.execute("update ugc_users set balans = balans - "+str(message.text)+" where id = " + str(message.chat.id))
							connection.commit()
							q.execute("INSERT INTO vau (name,summa,adds) VALUES ('%s', '%s', '%s')"%(id_sdelka,message.text,message.chat.id))
							connection.commit()
							bot.send_message(message.chat.id, f'''üéÅ –í–∞—É—á–µ—Ä <code>{id_sdelka}</code>, —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω.''',reply_markup=keyboards.main, parse_mode='HTML')
							q.close()
							connection.close()
					else:
						msg = bot.send_message(message.chat.id, '‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')

				else:
					msg = bot.send_message(message.chat.id, '‚ö† –û—à–∏–±–∫–∞!')
			else:
				bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é',reply_markup=keyboards.main)
		else:
			bot.send_message(message.chat.id, '‚úñÔ∏è –ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω–∞ —Å—É–º–º–∞.',parse_mode='HTML',disable_web_page_preview = True, reply_markup=keyboards.main)
	else:
		bot.send_message(message.chat.id, '‚úñÔ∏è –í–≤–æ–¥–∏—Ç—å –Ω—É–∂–Ω–æ —á–∏—Å–ª–æ\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É', reply_markup=keyboards.main)
def new_token(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("update config set qiwi_token = '"+str(message.text)+"' where id = '1'")
		connection.commit()
		msg = bot.send_message(message.chat.id, '<b>–£—Å–ø–µ—à–Ω–æ!</b>',parse_mode='HTML', reply_markup=keyboards.admin)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)

def new_phone(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("update config set qiwi_phone = '"+str(message.text)+"' where id = '1'")
		connection.commit()
		msg = bot.send_message(message.chat.id, '<b>–£—Å–ø–µ—à–Ω–æ!</b>',parse_mode='HTML', reply_markup=keyboards.admin)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∞–¥–º–∏–Ω–∫—É',parse_mode='HTML', reply_markup=keyboards.admin)

def yo_viplata(message):
	qiwi_user = message.text
	if message.text != 'üî∂ –û—Ç–º–µ–Ω–∏—Ç—å':
		if qiwi_user[:1] == '4' and len(qiwi_user) == 16:
			if qiwi_user.isdigit() == True:
				global numberphone
				numberphone = message.text
				msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –≤—ã–ø–ª–∞—Ç—ã')
				bot.register_next_step_handler(msg, yo_vilata_card)
			else:
				bot.send_message(message.chat.id, 'üìõ –ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã!',reply_markup=keyboards.main)
		else:
			msg = bot.send_message(message.chat.id, 'üìõ –ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã!')

	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é',reply_markup=keyboards.main)

def yo_vilata_card(message):
	connection = sqlite3.connect('database.sqlite')
	q = connection.cursor()
	if message.text.isdigit() == True:
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("SELECT com_vivod FROM config  where id = "+str(1))
		com_vivod = q.fetchone()[0]
		q = q.execute("SELECT balans FROM ugc_users WHERE id = "+str(message.chat.id))
		check_balans = q.fetchone()
		if float(check_balans[0]) >= int(message.text):
				ref_prozent = com_vivod
				add_ref_money = int(message.text)/100*int(ref_prozent)
				sum_vivod = int(message.text) - int(add_ref_money)
				q.execute("update ugc_users set balans = balans - "+str(message.text)+" where id = " + str(message.chat.id))
				connection.commit()
				q.execute("INSERT INTO vivod (user_id,summa,method,rek) VALUES ('%s', '%s', '%s', '%s')"%(message.chat.id,sum_vivod, 'Yandex',numberphone))
				connection.commit()
				bot.send_message(message.chat.id, '''‚úÖ –í—ã–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫–∞–∑–∞–Ω–∞, –æ–∂–∏–¥–∞–π—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ !''',reply_markup=keyboards.main, parse_mode='HTML')
				q.close()
				connection.close()
		else:
			msg = bot.send_message(message.chat.id, '‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')

	else:
		msg = bot.send_message(message.chat.id, '‚ö† –û—à–∏–±–∫–∞!')

def card_viplata(message):
	qiwi_user = message.text
	if message.text != 'üî∂ –û—Ç–º–µ–Ω–∏—Ç—å':
		if qiwi_user[:1] == '4' and len(qiwi_user) == 16 or qiwi_user[:1] == '5' and len(qiwi_user) == 16:
			if qiwi_user.isdigit() == True:
				global numberphone
				numberphone = message.text
				msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –≤—ã–ø–ª–∞—Ç—ã')
				bot.register_next_step_handler(msg, summa_vilata_card)
			else:
				bot.send_message(message.chat.id, 'üìõ –ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã!',reply_markup=keyboards.main)
		else:
			msg = bot.send_message(message.chat.id, 'üìõ –ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã!')

	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é',reply_markup=keyboards.main)

def summa_vilata_card(message):
	connection = sqlite3.connect('database.sqlite')
	q = connection.cursor()
	if message.text.isdigit() == True:
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("SELECT com_vivod FROM config  where id = "+str(1))
		com_vivod = q.fetchone()[0]
		q = q.execute("SELECT balans FROM ugc_users WHERE id = "+str(message.chat.id))
		check_balans = q.fetchone()
		if float(check_balans[0]) >= int(message.text):
				ref_prozent = com_vivod
				add_ref_money = int(message.text)/100*int(ref_prozent)
				sum_vivod = int(message.text) - int(add_ref_money)
				q.execute("update ugc_users set balans = balans - "+str(message.text)+" where id = " + str(message.chat.id))
				connection.commit()
				q.execute("INSERT INTO vivod (user_id,summa,method,rek) VALUES ('%s', '%s', '%s', '%s')"%(message.chat.id,sum_vivod, 'CARD',numberphone))
				connection.commit()
				bot.send_message(message.chat.id, '''‚úÖ –í—ã–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫–∞–∑–∞–Ω–∞, –æ–∂–∏–¥–∞–π—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ !''',reply_markup=keyboards.main, parse_mode='HTML')
				q.close()
				connection.close()
		else:
			msg = bot.send_message(message.chat.id, '‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')

	else:
		msg = bot.send_message(message.chat.id, '‚ö† –û—à–∏–±–∫–∞!')

def btc_viplata(message):
	qiwi_user = message.text
	if message.text != 'üî∂ –û—Ç–º–µ–Ω–∏—Ç—å':
		global numberphone
		numberphone = message.text
		msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –≤—ã–ø–ª–∞—Ç—ã')
		bot.register_next_step_handler(msg, summa_vilata_btc)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é',reply_markup=keyboards.main)


def otziv_2_2(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		try:
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			q.execute(f"SELECT name FROM ugc_users where id = '{awfawfawaaa}'")
			iduser_sellname = q.fetchone()[0]
			q.execute("SELECT uv_sdelki FROM config  where id = "+str(1))
			uv_sdelki = q.fetchone()[0]
			covlotziv = q.execute(f'SELECT COUNT(id) FROM otziv where user = {awfawfawaaa}').fetchone()[0]
			print()
			covlotziv = int(covlotziv) + 1
			q.execute("INSERT INTO otziv (user,texts,otsuser,id_otziv) VALUES ('%s', '%s', '%s', '%s')"%(awfawfawaaa,message.text,f'@{message.from_user.username}',covlotziv))
			connection.commit()
			bot.send_message(uv_sdelki, f'''–ü–æ–ª—É—á–µ–Ω –æ—Ç–∑—ã–≤! 
–û—Ç @{message.from_user.username} –¥–ª—è @{iduser_sellname} –ø–æ —Å–¥–µ–ª–∫–µ #G{id_sdelka_otziv}
----- 

{message.text}
''', parse_mode='HTML')
			bot.send_message(message.chat.id, f'‚ù§Ô∏è –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤',reply_markup=keyboards.main)
		except Exception as e:
			print(e)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é',reply_markup=keyboards.main)

def summa_vilata_btc(message):
	connection = sqlite3.connect('database.sqlite')
	q = connection.cursor()
	if message.text.isdigit() == True:
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("SELECT com_vivod FROM config  where id = "+str(1))
		com_vivod = q.fetchone()[0]
		q = q.execute("SELECT balans FROM ugc_users WHERE id = "+str(message.chat.id))
		check_balans = q.fetchone()
		if float(check_balans[0]) >= int(message.text):
				ref_prozent = com_vivod
				add_ref_money = int(message.text)/100*int(ref_prozent)
				sum_vivod = int(message.text) - int(add_ref_money)
				q.execute("update ugc_users set balans = balans - "+str(message.text)+" where id = " + str(message.chat.id))
				connection.commit()
				q.execute("INSERT INTO vivod (user_id,summa,method,rek) VALUES ('%s', '%s', '%s', '%s')"%(message.chat.id,sum_vivod, 'BTC','0'))
				connection.commit()
				bot.send_message(message.chat.id, '''‚úÖ –í—ã–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫–∞–∑–∞–Ω–∞, –æ–∂–∏–¥–∞–π—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ !''',reply_markup=keyboards.main, parse_mode='HTML')
				q.close()
				connection.close()
		else:
			msg = bot.send_message(message.chat.id, '‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')

	else:
		msg = bot.send_message(message.chat.id, '‚ö† –û—à–∏–±–∫–∞!')

def send_user(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		bot.send_message(message.chat.id, '–ì–æ—Ç–æ–≤–æ !',reply_markup=keyboards.admin)
		bot.send_message(id_user_viplata, message.text,reply_markup=keyboards.main)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é',reply_markup=keyboards.main)

def qiwi_viplata(message):
	qiwi_user = message.text
	if message.text != '–û—Ç–º–µ–Ω–∞':
		if qiwi_user[:1] == '7' and len(qiwi_user) == 11 or qiwi_user[:3] == '380' and len(qiwi_user[3:]) == 9 or qiwi_user[:3] == '375' and len(qiwi_user) <= 12:
			if qiwi_user.isdigit() == True:
				global numberphone
				numberphone = message.text
				msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –≤—ã–ø–ª–∞—Ç—ã')
				bot.register_next_step_handler(msg, summa_vilata_qiwi)
			else:
				bot.send_message(message.chat.id, 'üìõ –ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω –∫–æ—à–µ–ª–µ–∫!',reply_markup=keyboards.main)
		else:
			msg = bot.send_message(message.chat.id, 'üìõ –ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω –∫–æ—à–µ–ª–µ–∫!',reply_markup=keyboards.main)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é',reply_markup=keyboards.main)

def summa_vilata_qiwi(message):
	connection = sqlite3.connect('database.sqlite')
	q = connection.cursor()
	if message.text.isdigit() == True:
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		com_vivod = q.execute("SELECT com_vivod FROM config  where id = '1'").fetchone()[0]
		q = q.execute("SELECT balans FROM ugc_users WHERE id = "+str(message.chat.id))
		check_balans = q.fetchone()
		if float(check_balans[0]) >= int(message.text):
				ref_prozent = com_vivod
				add_ref_money = int(message.text)/100*int(ref_prozent)
				sum_vivod = int(message.text) - int(add_ref_money)
				q.execute("update ugc_users set balans = balans - "+str(message.text)+" where id = " + str(message.chat.id))
				connection.commit()
				q.execute("INSERT INTO vivod (user_id,summa,method,rek) VALUES ('%s', '%s', '%s', '%s')"%(message.chat.id,sum_vivod, 'qiwi',numberphone))
				connection.commit()
				bot.send_message(message.chat.id, '''‚úÖ –í—ã–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫–∞–∑–∞–Ω–∞, –æ–∂–∏–¥–∞–π—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ !''',reply_markup=keyboards.main, parse_mode='HTML')
				q.close()
				connection.close()
		else:
			msg = bot.send_message(message.chat.id, '‚ö† –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')

def proverka_ya(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		if message.text.isdigit() == True:
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			qiwi_token = q.execute("SELECT qiwi_token FROM config where id = '1'").fetchone()[0]
			headers = {"Content-Type": "application/x-www-form-urlencoded","Authorization": f"Bearer {qiwi_token}"}
			code_req = requests.post('https://yoomoney.ru/api/operation-history', data=f'type=deposition&details=true', allow_redirects=False, headers=headers).json()
			for i in code_req['operations']:
				q = q.execute("SELECT id FROM temp_pay WHERE txnid = " + str(i['operation_id']))
				temp_pay = q.fetchone()
				if i['status'] == 'success' and i['amount_currency'] == 'RUB' and temp_pay == None:
					if int(message.text) == int(i['amount']):
						q.execute("INSERT INTO temp_pay (txnid) VALUES ('%s')"%(i['operation_id']))
						connection.commit()
						q.execute("update ugc_users set balans = balans + "+str(float(i['amount']))+" where id = " + str(message.chat.id))
						connection.commit()
						bot.send_message(message.chat.id, f"‚úÖ –ù–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–µ–Ω–æ {i['amount']} RUB",parse_mode='HTML',reply_markup=keyboards.main)
						return
			bot.send_message(message.chat.id, f"‚ö† –û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!",parse_mode='HTML',reply_markup=keyboards.main)
		else:
			bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞',reply_markup=keyboards.main)
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é',reply_markup=keyboards.main)

def vau_good(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute(f"SELECT * FROM vau where name = '{message.text}'")
		status = q.fetchone()
		if status != None:
			print("yes")
			q.execute(f"SELECT summa FROM vau where name = '{message.text}'")
			summa = q.fetchone()
			q.execute(f"SELECT adds FROM vau where name = '{message.text}'")
			adds = q.fetchone()
			q.execute("update ugc_users set balans = balans + "+str(summa[0])+" where id = " + str(message.chat.id))
			connection.commit()
			print(summa[0])
			q.execute(f"DELETE FROM vau WHERE name = '{message.text}'")
			connection.commit()
			bot.send_message(message.chat.id, f'''üéÅ –í–∞—É—á–µ—Ä <code>{message.text}</code>, —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ <code>{summa[0]}</code> RUB. ''',reply_markup=keyboards.main, parse_mode='HTML')
			bot.send_message(adds[0], f'''üë§  <a href="tg://user?id={message.chat.id}">{message.chat.first_name}</a>  –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª(–∞) –≤–∞—É—á–µ—Ä <code>{message.text}</code>.''',reply_markup=keyboards.main, parse_mode='HTML')

		else:
			bot.send_message(message.chat.id, f'''üéÅ –í–∞—É—á–µ—Ä <code>{message.text}</code>, –Ω–µ —Å—É—à–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.''',reply_markup=keyboards.main, parse_mode='HTML')
	else:
		bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é',reply_markup=keyboards.main)
				
@bot.callback_query_handler(func=lambda call:True)
def podcategors(call):

	if call.data[:9] == 'my_sdelki':
		if call.data[9:] == '':
			bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text='üõÉ–ö–∞–∫ –ø–æ–∫—É–ø–∞—Ç–µ–ª—å',callback_data='my_sdelki_buyer'))
			keyboard.add(types.InlineKeyboardButton(text='üõÇ–ö–∞–∫ –ø—Ä–æ–¥–∞–≤–µ—Ü',callback_data='my_sdelki_seller'))
			bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏ —Ç–∏–ø —Å–¥–µ–ª–∫–∏', reply_markup=keyboard)

		elif call.data[9:] == '_seller':
			bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			q.execute(f"SELECT * FROM sdelki where user_invite = '{call.message.chat.id}'")
			info = q.fetchall()
			if info != None:
				keyboard = types.InlineKeyboardMarkup()
				for i in info:
					if str(i[5]) == str('–§–∏–Ω–∞–ª'):
						keyboard.add(types.InlineKeyboardButton(text=f'üî∞ –°–¥–µ–ª–∫–∞:  #{i[0]} | {i[6]} ',callback_data=f'–ø—Ä–æ—Å–º–æ—Ç—Ä—Å–¥–µ–ª–∫–∏{i[0]}'))
					if str(i[5]) == str('–û–ø–ª–∞—á–µ–Ω–∞'):
						keyboard.add(types.InlineKeyboardButton(text=f'üî∞ –°–¥–µ–ª–∫–∞:  #{i[0]} | {i[6]} ',callback_data=f'–ø—Ä–æ—Å–º–æ—Ç—Ä—Å–¥–µ–ª–∫–∏{i[0]}'))
					if str(i[5]) == str('–ê—Ä–±–∏—Ç—Ä–∞–∂'):
						keyboard.add(types.InlineKeyboardButton(text=f'üî∞ –°–¥–µ–ª–∫–∞:  #{i[0]} | {i[6]} ',callback_data=f'–ø—Ä–æ—Å–º–æ—Ç—Ä—Å–¥–µ–ª–∫–∏{i[0]}'))
				bot.send_message(call.message.chat.id, f'''–í—ã–±–µ—Ä–∏—Ç–µ —Å–¥–µ–ª–∫—É''', parse_mode='HTML', reply_markup=keyboard)
			else:
				bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="–£ –≤–∞—Å –Ω–µ—Ç —Å–¥–µ–ª–æ–∫ —Ç–∞–∫–æ–≥–æ —Ç–∏–ø–∞")


		elif call.data[9:] == '_buyer':
			bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
			connection = sqlite3.connect('database.sqlite')
			q = connection.cursor()
			q.execute(f"SELECT * FROM sdelki where user_create = '{call.message.chat.id}'")
			info = q.fetchall()
			if info != None:
				keyboard = types.InlineKeyboardMarkup()
				for i in info:
					if str(i[5]) == str('–§–∏–Ω–∞–ª'):
						keyboard.add(types.InlineKeyboardButton(text=f'üî∞ –°–¥–µ–ª–∫–∞:  #{i[0]} | {i[6]} ',callback_data=f'–ø—Ä–æ—Å–º–æ—Ç—Ä—Å–¥–µ–ª–∫–∏{i[0]}'))
					if str(i[5]) == str('–û–ø–ª–∞—á–µ–Ω–∞'):
						keyboard.add(types.InlineKeyboardButton(text=f'üî∞ –°–¥–µ–ª–∫–∞:  #{i[0]} | {i[6]} ',callback_data=f'–ø—Ä–æ—Å–º–æ—Ç—Ä—Å–¥–µ–ª–∫–∏{i[0]}'))
					if str(i[5]) == str('–ê—Ä–±–∏—Ç—Ä–∞–∂'):
						keyboard.add(types.InlineKeyboardButton(text=f'üî∞ –°–¥–µ–ª–∫–∞:  #{i[0]} | {i[6]} ',callback_data=f'–ø—Ä–æ—Å–º–æ—Ç—Ä—Å–¥–µ–ª–∫–∏{i[0]}'))
				bot.send_message(call.message.chat.id, f'''–í—ã–±–µ—Ä–∏—Ç–µ —Å–¥–µ–ª–∫—É''', parse_mode='HTML', reply_markup=keyboard)
			else:
				bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text="–£ –≤–∞—Å –Ω–µ—Ç —Å–¥–µ–ª–æ–∫ —Ç–∞–∫–æ–≥–æ —Ç–∏–ø–∞")


	if call.data[:12] == 'awhat_oplata':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		keyboard = types.InlineKeyboardMarkup(row_width=2)
		keyboard.add(types.InlineKeyboardButton(text=f'–ÆMoney',callback_data=f'Depoziit_qiwi'),types.InlineKeyboardButton(text=f'üí± BTC|ETH|LTC –ß–µ–∫',callback_data=f'–±—Ç–∫—á–µ–∫'))
		bot.send_message(call.message.chat.id,  '–í—ã–±–µ—Ä–∏ —Å–ø–æ—Å–æ–± –¥–ª—è –¥–µ–ø–æ–∑–∏—Ç–∞', reply_markup=keyboard)

	if call.data[:13] == 'Depoziit_qiwi':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		qiwi_phone = q.execute("SELECT qiwi_phone FROM config where id = '1'").fetchone()[0]
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text='‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å',callback_data='Check_Depozit_qiwi_'))
		bot.send_message(call.message.chat.id,f'''üëâ –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –±–æ—Ç–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Ä—É–±–ª—ë–≤—ã–π –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –ª—é–±—É—é —Å—É–º–º—É –ø–æ —Å–ª–µ–¥—É—é—â–∏–º —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º:

‚ñ´Ô∏è –ö–æ—à–µ–ª—ë–∫: <code>{qiwi_phone}</code>

‚è± –ü–æ—Å–ª–µ –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–†–û–í–ï–†–ò–¢–¨" –∏ —É–∫–∞–∂–∏—Ç–µ —Ç–æ—á–Ω—É—é —Å—É–º–º—É –ø–ª–∞—Ç–µ–∂–∞.''',parse_mode='HTML', reply_markup=keyboard)
		


	if call.data == 'Check_Depozit_qiwi_':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id,f"<b>‚ÑπÔ∏è –£–∫–∞–∂–∏—Ç–µ —Ç–æ—á–Ω—É—é —Å—É–º–º—É –ø–ª–∞—Ç–µ–∂–∞ (–ù–∞–ø—Ä–∏–º–µ—Ä - 100)</b>", reply_markup=keyboards.main, parse_mode='HTML')
		bot.register_next_step_handler(msg, proverka_ya)

	if call.data == '–ø—Ä–æ–º–æ–∞–∫—Ç–∏–≤–∞—Ü–∏—è':
		msg = bot.send_message(call.message.chat.id,f"<b>‚ÑπÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥:</b>", reply_markup=keyboards.main, parse_mode='HTML')
		bot.register_next_step_handler(msg, aktivpromo)


	if call.data[:12] == '–±—Ç–∫—á–µ–∫':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id,f'''üëâ –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ <a href="https://t.me/BTC_CHANGE_BOT?start=13Rc4">BTC</a>|<a href="https://t.me/ETH_CHANGE_BOT?start=13Rc4">ETH</a>|<a href="https://t.me/LTC_CHANGE_BOT?start=13Rc4">LTC</a> –ß–µ–∫–æ–º –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –ß–ï–ö –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.

‚è± –ù–∞—à–∞ —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç —á–µ–∫, –≤—Ä–µ–º—è –∑–∞–π–º–µ—Ç –¥–æ 1 –º–∏–Ω—É—Ç—ã
''',reply_markup=keyboards.otmena, parse_mode='HTML',disable_web_page_preview = True)
		bot.register_next_step_handler(msg, btc_oplata_1)



	elif call.data == 'create_sdelka':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.from_user.id,  '''‚ÑπÔ∏è –í—ã —Å–æ–∑–¥–∞—ë—Ç–µ —Å–¥–µ–ª–∫—É –∫–∞–∫ –ø—Ä–æ–¥–∞–≤–µ—Ü.

üí≥ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å–¥–µ–ª–∫–∏:''', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, create_sdelka)

	elif call.data == 'invite_sdelka':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.from_user.id,  'üî∞ –£–∫–∞–∂–∏—Ç–µ id —Å–¥–µ–ª–∫–∏', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, invite_sdelka)


	elif call.data[:11] == 'pay_sdelka_':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute(f"SELECT summa FROM sdelki where id = '{call.data[11:]}'")
		summa = q.fetchone()
		q.execute(f"SELECT user_create FROM sdelki where id = '{call.data[11:]}'")
		user_create = q.fetchone()
		q.execute("SELECT balans FROM ugc_users where id = "+ str(call.from_user.id))
		bal_us = q.fetchone()
		if int(bal_us[0]) >= int(summa[0]):
			q.execute("update ugc_users set balans = balans - " + str(summa[0])+" where id = " +str(call.from_user.id))
			connection.commit()
			q.execute(f"update sdelki set oplata = '–î–∞' where id = '{call.data[11:]}'")
			connection.commit()
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text='‚úîÔ∏è –¢–æ–≤–∞—Ä –ø–æ–ª—É—á–∏–ª ',callback_data=f'sdelka_good_{call.data[11:]}'))
			bot.send_message(call.from_user.id,  f'''üìú –°–¥–µ–ª–∫–∞: #{call.data[11:]} –æ–ø–ª–∞—á–µ–Ω–∞.

‚ÑπÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ: {user_create[0]} —á—Ç–æ –±—ã –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–≤–∞—Ä !''', reply_markup=keyboard)
			bot.send_message(user_create[0], f'''üìú –°–¥–µ–ª–∫–∞: #G{call.data[11:]} –æ–ø–ª–∞—á–µ–Ω–∞.

‚ÑπÔ∏è –ú–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –ø–æ–∫—É–ø–∞—Ç–µ–ª—é: <a href="tg://user?id={call.message.chat.id}">{call.message.chat.id}</a> !''',parse_mode='HTML', reply_markup=keyboards.main)
		else:
			bot.send_message(call.from_user.id, '–ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å!', reply_markup=keyboards.main)


	elif call.data[:14] == 'otmena_sdelka_':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		id_sdelka = call.data[14:]
		print(id_sdelka)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute(f"SELECT user_create FROM sdelki where id = '{id_sdelka}'")
		user_create = q.fetchone()
		q.execute(f"SELECT user_invite FROM sdelki where id = '{id_sdelka}'")
		user_invite = q.fetchone()
		q.execute(f"update sdelki set status = '–ó–∞–∫—Ä—ã—Ç–∞' where id = '{id_sdelka}'")
		connection.commit()
		q.execute("SELECT uv_sdelki FROM config  where id = "+str(1))
		uv_sdelki = q.fetchone()[0]
		bot.send_message(call.from_user.id,  f''''üìú –°–¥–µ–ª–∫–∞: #{id_sdelka} –æ—Ç–º–µ–Ω–µ–Ω–∞ ! ''',parse_mode='HTML', reply_markup=keyboards.main)
		bot.send_message(user_create[0], f'''üìú –°–¥–µ–ª–∫–∞: #{id_sdelka} –æ—Ç–º–µ–Ω–µ–Ω–∞ ! ''',parse_mode='HTML', reply_markup=keyboards.main)

	elif call.data[:10] == 'otziv_yes_':
		global id_sdelka1
		id_sdelka1 = call.data[10:]
		print(id_sdelka1)
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.from_user.id,  '‚ÑπÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞:', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, otziv_yes)

	elif call.data[:9] == 'otziv_no_':
		id_sdelka = call.data[9:]
		print(id_sdelka)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute(f"SELECT user_create FROM sdelki where id = '{id_sdelka}'")
		user_create = q.fetchone()
		q.execute(f"SELECT user_invite FROM sdelki where id = '{id_sdelka}'")
		user_invite = q.fetchone()
		if float(user_create[0]) == int(call.from_user.id):
			print('popal v user_create')
			bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text='üëç',callback_data=f'user_plus_{user_invite[0]}'),types.InlineKeyboardButton(text='üëé',callback_data=f'user_minus_{user_invite[0]}'))
			bot.send_message(call.from_user.id,  '‚ÑπÔ∏è –û—Ü–µ–Ω–∏—Ç–µ —Ä–∞–±–æ—Ç—É id —é–∑–µ—Ä–∞', reply_markup=keyboard)
		else:
			bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text='üëç',callback_data=f'user_plus_{user_create[0]}'),types.InlineKeyboardButton(text='üëé',callback_data=f'user_minus_{user_create[0]}'))
			bot.send_message(call.from_user.id,  '‚ÑπÔ∏è –û—Ü–µ–Ω–∏—Ç–µ —Ä–∞–±–æ—Ç—É id —é–∑–µ—Ä–∞', reply_markup=keyboard)

	elif call.data[:10] == "user_plus_":
		otziv_id = call.data[10:]
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute(f"SELECT name FROM ugc_users where id = '{otziv_id}'")
		iduser_sellname = q.fetchone()[0]
		q.execute("update ugc_users set raiting = raiting + " + str('1')+" where id = " +str(otziv_id))
		connection.commit()
		bot.send_message(call.message.chat.id, f'''<b>‚ù§Ô∏è –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É, —Ä–µ–π—Ç–∏–Ω–≥ @{iduser_sellname} –±—É–¥–µ—Ç –ø–æ–≤—ã—à–µ–Ω !</b>''',parse_mode='HTML')
		bot.send_message(otziv_id, f'''<b>üë§ <a href="tg://user?id={call.message.chat.id}">{call.message.chat.first_name}</a> –ø–æ–≤—ã—Å–∏–ª –≤–∞–º —Ä–µ–π—Ç–∏–Ω–≥ !</b>''',parse_mode='HTML', reply_markup=keyboards.main)

	elif call.data[:8] == "otzivyes":
		global awfawfawaaa
		awfawfawaaa = call.data[8:]
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞:',reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, otziv_2_2)

	elif call.data[:11] == "user_minus_":
		otziv_id = call.data[11:]
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute(f"SELECT name FROM ugc_users where id = '{otziv_id}'")
		iduser_sellname = q.fetchone()[0]
		q = connection.cursor()
		q.execute("update ugc_users set raiting = raiting - " + str('2')+" where id = " +str(otziv_id))
		connection.commit()
		bot.send_message(call.message.chat.id, f'''<b>‚ù§Ô∏è –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É, —Ä–µ–π—Ç–∏–Ω–≥ @{iduser_sellname} –±—É–¥–µ—Ç –ø–æ–Ω–∏–∂–µ–Ω !</b>''',parse_mode='HTML')
		bot.send_message(otziv_id, f'''<b>üë§ <a href="tg://user?id={call.message.chat.id}">{call.message.chat.first_name}</a> –ø–æ–Ω–∏–∑–∏–ª –≤–∞–º —Ä–µ–π—Ç–∏–Ω–≥ !</b>''',parse_mode='HTML', reply_markup=keyboards.main)

	elif call.data == "awhat_wind":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text='ü•ù QIWI',callback_data=f'QIWI'),types.InlineKeyboardButton(text='üí≥ CARD',callback_data=f'CARD'))
		keyboard.add(types.InlineKeyboardButton(text='üí± BTC|ETH|LTC',callback_data=f'BTC'),types.InlineKeyboardButton(text='–ÆMoney',callback_data=f'WMZ'))
		bot.send_message(call.message.chat.id, "<b>üì§ –í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É:</b>",parse_mode='HTML', reply_markup=keyboard)

	elif call.data == "QIWI":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id, "<b>üì§ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à Qiwi –ö–æ—à–µ–ª–µ–∫ (–ë–µ–∑ +):</b>",parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, qiwi_viplata)

	elif call.data == "CARD":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id, "<b>üì§ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: (Visa –∏–ª–∏ Mastercard)</b>",parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, card_viplata)

	elif call.data == "BTC":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –≤—ã–ø–ª–∞—Ç—ã', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, summa_vilata_btc)

	elif call.data == "WMZ":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id, "<b>üì§ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à Yandex:</b>",parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, yo_viplata)


	elif call.data == "vau":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text='üìù–°–æ–∑–¥–∞—Ç—å',callback_data=f'vau_add'),types.InlineKeyboardButton(text='üì®–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å',callback_data=f'vau_good'))
		bot.send_message(call.message.chat.id, "<b>–ß—Ç–æ –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ —Å–¥–µ–ª–∞—Ç—å?</b>",parse_mode='HTML', reply_markup=keyboard)

	elif call.data == "vau_add":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("SELECT balans FROM ugc_users where id is " + str(call.message.chat.id))
		balanss = q.fetchone()
		msg = bot.send_message(call.message.chat.id, f'''–ù–∞ –∫–∞–∫—É—é —Å—É–º–º—É RUB –≤—ã–ø–∏—Å–∞—Ç—å –í–∞—É—á–µ—Ä ? (–ï–≥–æ —Å–º–æ–∂–µ—Ç –æ–±–Ω–∞–ª–∏—á–∏—Ç—å –ª—é–±–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∑–Ω–∞—é—â–∏–π –∫–æ–¥).

–î–æ—Å—Ç—É–ø–Ω–æ: {balanss[0]} RUB''',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, vau_add)

	elif call.data == "vau_good":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id, '''–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤–∞—É—á–µ—Ä–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –∫–æ–¥:''',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, vau_good)


	elif call.data[:13]  == "–û—Ç–∫—Ä—ã—Ç—å—Å–¥–µ–ª–∫—É":
		global iduser_sell
		iduser_sell = call.data[13:]
		msg = bot.send_message(call.message.chat.id, "<b>–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å–¥–µ–ª–∫–∏ –≤ RUB:</b>",parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, create_sdelka1)

	elif call.data[:14]  == "–æ—Ç–∑—ã–≤—ã—Å–º–æ—Ç—Ä–µ—Ç—å":
		global id_otzivs
		global sasfasfasf
		sasfasfasf = call.data[14:]
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute(f"SELECT * FROM otziv where user = '{sasfasfasf}' and id_otziv = 1")
		Winners = q.fetchall()
		for i in Winners:
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text='üîÑ –°–º–æ—Ç—Ä–µ—Ç—å –µ—â–µ',callback_data=f'—Å–º–æ—Ç—Ä–µ—Ç—å–µ—â–µ–æ—Ç–∑—ã–≤{2}'))
			bot.send_message(call.from_user.id, f'–û—Ç–∑—ã–≤ –æ—Ç {i[3]} : <code>{i[2]}</code>' ,parse_mode='HTML', reply_markup=keyboard)

	elif call.data[:16]  == "—Å–º–æ—Ç—Ä–µ—Ç—å–µ—â–µ–æ—Ç–∑—ã–≤":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		id_otzivs = call.data[16:]
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		print(sasfasfasf)
		print(id_otzivs)
		q.execute(f"SELECT * FROM otziv where user = '{sasfasfasf}' and id_otziv = {id_otzivs}")
		Winners = q.fetchall()
		for i in Winners:
			id_otzivs = int(id_otzivs) + 1
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text='üîÑ –°–º–æ—Ç—Ä–µ—Ç—å –µ—â–µ',callback_data=f'—Å–º–æ—Ç—Ä–µ—Ç—å–µ—â–µ–æ—Ç–∑—ã–≤{id_otzivs}'))

			bot.send_message(call.from_user.id, f'–û—Ç–∑—ã–≤ –æ—Ç {i[3]} : <code>{i[2]}</code>' ,parse_mode='HTML', reply_markup=keyboard)

	elif call.data[:11]  == "–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å":
		idsdelkas = call.data[11:]
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		try:
			status = q.execute(f'SELECT status FROM sdelki where id = "{idsdelkas}"').fetchone()[0]
			if str(status) == str('–û—Ç–∫—Ä—ã—Ç–∞'):
				pokupatel = q.execute(f'SELECT user_create FROM sdelki where id = "{idsdelkas}"').fetchone()[0]
				summa = q.execute(f'SELECT summa FROM sdelki where id = "{idsdelkas}"').fetchone()[0]
				balance = summa
				curse = requests.get('https://blockchain.info/ticker').json()['RUB']['last']
				summarub = float(balance)*float(curse)
				q.execute(f"update sdelki set status = '–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã' where id = '{idsdelkas}'")
				connection.commit()
				q.execute(f"update sdelki set user_invite = '{call.message.chat.id}' where id = '{idsdelkas}'")
				connection.commit()
				q.execute(f"SELECT name FROM ugc_users where id = '{call.message.chat.id}'")
				iduser_sellname = q.fetchone()[0]
				q.execute(f"SELECT name FROM ugc_users where id = '{pokupatel}'")
				idubuyname = q.fetchone()[0]
				info = q.execute(f'SELECT info FROM sdelki where id = "{idsdelkas}"').fetchone()[0]

				bot.send_message(call.message.chat.id, f'''üî∞ –°–¥–µ–ª–∫–∞: #G{idsdelkas}

		‚ûñ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å: @{idubuyname}

		‚ûñ –ü—Ä–æ–¥–∞–≤–µ—Ü: @{iduser_sellname}

		üí∞ –°—É–º–º–∞: <code>{summa}</code> RUB

		üìù –£—Å–ª–æ–≤–∏—è: <code>{info}</code>

		‚ôªÔ∏è –°—Ç–∞—Ç—É—Å: –û–∂–∏–¥–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ–ø–ª–∞—Ç–µ''',parse_mode='HTML')
				keyboard = types.InlineKeyboardMarkup()
				keyboard.add(types.InlineKeyboardButton(text='–û–ø–ª–∞—Ç–∏—Ç—å',callback_data=f'–æ–ø–ª–∞—Ç–∏—Ç—å—Å–¥–µ–ª–∫—É{idsdelkas}'))
				keyboard.add(types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å',callback_data=f'–æ—Ç–∫–∞–∑—Å–¥–µ–ª–∫–∞{idsdelkas}'))
				bot.send_message(pokupatel, f'''üî∞ –°–¥–µ–ª–∫–∞: #G{idsdelkas}

		‚ûñ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å: @{idubuyname}

		‚ûñ –ü—Ä–æ–¥–∞–≤–µ—Ü: @{iduser_sellname}

		üí∞ –°—É–º–º–∞: <code>{summa}</code> RUB

		üìù –£—Å–ª–æ–≤–∏—è: <code>{info}</code>

		‚ôªÔ∏è –°—Ç–∞—Ç—É—Å: –û–∂–∏–¥–∞–Ω–∏–µ –æ–ø–ª–∞—Ç—ã''',parse_mode='HTML', reply_markup=keyboard)
		except:
			print('ss')
		

	
	elif call.data == 'fereralka':
		#bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("SELECT ref_colvo FROM ugc_users where id = " + str(call.from_user.id))
		ref_colvoo = q.fetchone()
		bot.send_message(call.from_user.id,  f'''<b>üë• –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞

‚ñ´Ô∏è–ß—Ç–æ —ç—Ç–æ?
–ù–∞—à–∞ —É–Ω–∏–∫–∞–ª—å–Ω–∞—è –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å–∏—Å—Ç–µ–º–∞ –ø–æ–∑–≤–æ–ª–∏—Ç –≤–∞–º –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –∫—Ä—É–ø–Ω—É—é —Å—É–º–º—É –±–µ–∑ –≤–ª–æ–∂–µ–Ω–∏–π. –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ª–∏—à—å –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –¥—Ä—É–∑–µ–π –∏ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–∂–∏–∑–Ω–µ–Ω–Ω–æ 2% –æ—Ç –∏—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –≤ –±–æ—Ç–µ.

üìØ –í–∞—à–∞ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è —Å—Å—ã–ª–∫–∞:</b>

https://t.me/SAVEGARANT_bot?start={call.from_user.id}

<b>üë• –í—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:</b> {ref_colvoo[0]}''', parse_mode='HTML',disable_web_page_preview = True, reply_markup=keyboards.main)
	elif call.data[:16]  == "—É—Å–ª–æ–≤–∏—è–≤—ã–ø–æ–ª–Ω–µ–Ω—ã":
		saasasasss = call.data[16:]
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		status = q.execute(f'SELECT status FROM sdelki where id = "{saasasasss}"').fetchone()[0]
		if str(status) == str('–û–ø–ª–∞—á–µ–Ω–∞'):
			user_create = q.execute(f'SELECT user_create FROM sdelki where id = "{saasasasss}"').fetchone()[0]
			summa = q.execute(f'SELECT summa FROM sdelki where id = "{saasasasss}"').fetchone()[0]
			balance = summa
			curse = requests.get('https://blockchain.info/ticker').json()['RUB']['last']
			summarub = float(balance)*float(curse)
			q.execute(f"update sdelki set status = '–§–∏–Ω–∞–ª' where id = '{saasasasss}'")
			connection.commit()
			info = q.execute(f'SELECT info FROM sdelki where id = "{saasasasss}"').fetchone()[0]
			q.execute(f"SELECT name FROM ugc_users where id = '{call.message.chat.id}'")
			iduser_sellname = q.fetchone()[0]
			q.execute(f"SELECT name FROM ugc_users where id = '{user_create}'")
			idubuyname = q.fetchone()[0]
			saassaddd = types.InlineKeyboardMarkup()
			saassaddd.add(types.InlineKeyboardButton(text='–û—Ç–∫—Ä—ã—Ç—å –∞—Ä–±–∏—Ç—Ä–∞–∂',callback_data=f'–∞—Ä–±–∏—Ç—Ä–∞–∂{saasasasss}'))
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–µ–Ω—å–≥–∏ –ø—Ä–æ–¥–∞–≤—Ü—É',callback_data=f'–æ—Ç–ø—Ä–∞–≤–∏—Ç—å–±–∞–±–∫–∏–ø—Ä–æ–¥–∞–≤—Ü—É{saasasasss}'))
			keyboard.add(types.InlineKeyboardButton(text='–û—Ç–∫—Ä—ã—Ç—å –∞—Ä–±–∏—Ç—Ä–∞–∂',callback_data=f'–∞—Ä–±–∏—Ç—Ä–∞–∂{saasasasss}'))
			bot.send_message(call.message.chat.id, f'''üî∞ –°–¥–µ–ª–∫–∞: #G{saasasasss}

‚ûñ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å: @{idubuyname}

‚ûñ –ü—Ä–æ–¥–∞–≤–µ—Ü: @{iduser_sellname}

üí∞ –°—É–º–º–∞: <code>{summa}</code> RUB

üìù –£—Å–ª–æ–≤–∏—è: <code>{info}</code>

‚ôªÔ∏è –°—Ç–∞—Ç—É—Å: –ó–∞–∫—Ä—ã—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª—è
''',parse_mode='HTML', reply_markup=saassaddd)

			bot.send_message(user_create, f'''üî∞ –°–¥–µ–ª–∫–∞: #G{saasasasss}

‚ûñ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å: @{idubuyname}

‚ûñ –ü—Ä–æ–¥–∞–≤–µ—Ü: @{iduser_sellname}

üí∞ –°—É–º–º–∞: <code>{summa}</code> RUB

üìù –£—Å–ª–æ–≤–∏—è: <code>{info}</code>

‚ôªÔ∏è –°—Ç–∞—Ç—É—Å: –£—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã''',parse_mode='HTML', reply_markup=keyboard)



	elif call.data[:22]  == "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å–±–∞–±–∫–∏–ø—Ä–æ–¥–∞–≤—Ü—É":
		idsdelkasaaassaa = call.data[22:]
		
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		status = q.execute(f'SELECT status FROM sdelki where id = "{idsdelkasaaassaa}"').fetchone()[0]
		if str(status) == str('–û–ø–ª–∞—á–µ–Ω–∞'):
			info = q.execute(f'SELECT info FROM sdelki where id = "{idsdelkasaaassaa}"').fetchone()[0]
			user_invite = q.execute(f'SELECT user_invite FROM sdelki where id = "{idsdelkasaaassaa}"').fetchone()[0]
			summa = q.execute(f'SELECT summa FROM sdelki where id = "{idsdelkasaaassaa}"').fetchone()[0]
			balance = summa
			q.execute("SELECT com_sdelka FROM config  where id = "+str(1))
			com_sdelka = q.fetchone()[0]
			ref_prozent = com_sdelka
			add_ref_money = float(summa)/100*float(ref_prozent)
			balance_add = float(summa) - float(add_ref_money)
			q.execute("update ugc_users set balans = balans + "+str(balance_add)+" where id = " + str(user_invite))
			connection.commit()
			q.execute(f"update sdelki set status = '–ó–∞–∫—Ä—ã—Ç–∞' where id = '{idsdelkasaaassaa}'")
			connection.commit()
			q.execute("update ugc_users set sdelka_summa = sdelka_summa + " + str(summa)+" where id = " +str(call.message.chat.id))
			connection.commit()
			q.execute("update ugc_users set sdelka_summa = sdelka_summa + " + str(summa)+" where id = " +str(user_invite))
			connection.commit()
			q.execute("update ugc_users set sdelka_colvo = sdelka_colvo + " + str('1')+" where id = " +str(call.message.chat.id))
			connection.commit()
			q.execute("update ugc_users set sdelka_colvo = sdelka_colvo + " + str('1')+" where id = " +str(user_invite))
			connection.commit()
			q.execute(f"SELECT name FROM ugc_users where id = '{user_invite}'")
			iduser_sellname = q.fetchone()[0]
			q.execute(f"SELECT name FROM ugc_users where id = '{call.message.chat.id}'")
			idubuyname = q.fetchone()[0]
			keyboardotziv = types.InlineKeyboardMarkup()
			keyboardotziv.add(types.InlineKeyboardButton(text='‚ûï –î–∞',callback_data=f'otzivyes{user_invite}'))
			iduser_sellname = iduser_sellname
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text='üëç',callback_data=f'user_plus_{call.message.chat.id}'),types.InlineKeyboardButton(text='üëé',callback_data=f'user_minus_{call.message.chat.id}'))
			keyboardaa = types.InlineKeyboardMarkup()
			keyboardaa.add(types.InlineKeyboardButton(text='üëç',callback_data=f'user_plus_{user_invite}'),types.InlineKeyboardButton(text='üëé',callback_data=f'user_minus_{user_invite}'))
			q.execute("SELECT uv_sdelki FROM config  where id = "+str(1))
			uv_sdelki = q.fetchone()[0]
			global id_sdelka_otziv
			global summa_sdelka_otziv
			id_sdelka_otziv = idsdelkasaaassaa
			summa_sdelka_otziv = summa
			q = q.execute('SELECT chat_user FROM ugc_users WHERE id IS '+str(call.message.chat.id))
			row = q.fetchone()
			if row != None:
				bot.send_message(row[0], f'''üî∞ –°–¥–µ–ª–∫–∞: #G{idsdelkasaaassaa} –∑–∞–∫—Ä—ã—Ç–∞!
–û—Ç @{iduser_sellname} –¥–ª—è @{idubuyname}
üí∞ –°—É–º–º–∞ —Å–¥–µ–ª–∫–∏: <code>{summa}</code> RUB
''',parse_mode='HTML')
				admin_chat = q.execute(f'SELECT user FROM chat_garant where chat_id = "{row[0]}"').fetchone()[0]
				ref_prozent = 95.5
				add_ref_money = float(summa)/100*float(ref_prozent)
				sum_vivod = float(summa) - float(add_ref_money)
				print(sum_vivod)
				q.execute("update ugc_users set balans = balans + "+str(sum_vivod)+" where id = " + str(admin_chat))
				connection.commit()
				bot.send_message(admin_chat, f'''üî∞ –°–¥–µ–ª–∫–∞: #G{idsdelkasaaassaa} –ü–æ—Å—Ç—É–ø–∏–ª–∞ –∫–æ–º–∏—Å—Å–∏—è <code>{sum_vivod}</code> RUB''',parse_mode='HTML')



			bot.send_message(uv_sdelki, f'''üî∞ –°–¥–µ–ª–∫–∞: #G{idsdelkasaaassaa} –∑–∞–∫—Ä—ã—Ç–∞!
–û—Ç @{iduser_sellname} –¥–ª—è @{idubuyname}
üí∞ –°—É–º–º–∞ —Å–¥–µ–ª–∫–∏: <code>{summa}</code> RUB
''',parse_mode='HTML')
			bot.send_message(call.message.chat.id, f'''üî∞ –°–¥–µ–ª–∫–∞: #G{idsdelkasaaassaa} –∑–∞–∫—Ä—ã—Ç–∞!''',parse_mode='HTML', reply_markup=keyboards.main)
			users_id_otziv = user_invite
			bot.send_message(call.message.chat.id, f'''üî∞ –°–¥–µ–ª–∫–∞: #G{idsdelkasaaassaa}

–•–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –æ @{iduser_sellname} ?

''',parse_mode='HTML', reply_markup=keyboardotziv)
			bot.send_message(user_invite, f'''üî∞ –°–¥–µ–ª–∫–∞: #G{idsdelkasaaassaa} –∑–∞–∫—Ä—ã—Ç–∞!
–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ <code>{summa}</code> RUB!
''',parse_mode='HTML', reply_markup=keyboards.main)
			bot.send_message(call.message.chat.id, f'''‚ÑπÔ∏è –û—Ü–µ–Ω–∏—Ç–µ —Ä–∞–±–æ—Ç—É @{iduser_sellname}''',parse_mode='HTML', reply_markup=keyboardaa)
			bot.send_message(user_invite, f'''‚ÑπÔ∏è –û—Ü–µ–Ω–∏—Ç–µ —Ä–∞–±–æ—Ç—É @{idubuyname}''',parse_mode='HTML', reply_markup=keyboard)

	elif call.data[:11]  == "–æ—Ç–∫–∞–∑—Å–¥–µ–ª–∫–∞":
		idsdelkasaaaotkaz = call.data[11:]
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		user_create = q.execute(f'SELECT user_create FROM sdelki where id = "{idsdelkasaaaotkaz}"').fetchone()[0]
		user_invite = q.execute(f'SELECT user_invite FROM sdelki where id = "{idsdelkasaaaotkaz}"').fetchone()[0]
		q.execute(f"DELETE FROM sdelki WHERE id = '{idsdelkasaaaotkaz}'")
		connection.commit()
		uv_sdelki = q.execute("SELECT uv_sdelki FROM config  where id = "+str(1)).fetchone()[0]
		bot.send_message(user_create, f'''üî∞ –°–¥–µ–ª–∫–∞: #G{idsdelkasaaaotkaz} –û—Ç–º–µ–Ω–µ–Ω–∞''',parse_mode='HTML', reply_markup=keyboards.main)
		bot.send_message(user_invite, f'''üî∞ –°–¥–µ–ª–∫–∞: #G{idsdelkasaaaotkaz} –û—Ç–º–µ–Ω–µ–Ω–∞''',parse_mode='HTML', reply_markup=keyboards.main)

	elif call.data[:8]  == "–∞—Ä–±–∏—Ç—Ä–∞–∂":
		arbitra = call.data[8:]
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		status = q.execute(f'SELECT status FROM sdelki where id = "{arbitra}"').fetchone()[0]
		if str(status) == str('–û–ø–ª–∞—á–µ–Ω–∞'):
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text='–î–∞',callback_data=f'–∞—Ä–±–∏—Ç–¥–∞{arbitra}'))
			bot.send_message(call.message.chat.id, f'''üî∞ –°–¥–µ–ª–∫–∞: #G{arbitra} –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç–∏—è –∞—Ä–±–∏—Ç—Ä–∞–∂–∞ ?''',parse_mode='HTML', reply_markup=keyboard)

	elif call.data[:7]  == "–∞—Ä–±–∏—Ç–¥–∞":
		arbitras = call.data[7:]
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		status = q.execute(f'SELECT status FROM sdelki where id = "{arbitras}"').fetchone()[0]
		if str(status) == str('–û–ø–ª–∞—á–µ–Ω–∞'):
			info = q.execute(f'SELECT info FROM sdelki where id = "{arbitras}"').fetchone()[0]
			user_invite = q.execute(f'SELECT user_invite FROM sdelki where id = "{arbitras}"').fetchone()[0]
			user_create = q.execute(f'SELECT user_create FROM sdelki where id = "{arbitras}"').fetchone()[0]
			summa = q.execute(f'SELECT summa FROM sdelki where id = "{arbitras}"').fetchone()[0]
			balance = summa
			q.execute(f"update sdelki set status = '–ê—Ä–±–∏—Ç—Ä–∞–∂' where id = '{arbitras}'")
			connection.commit()
			q.execute(f"SELECT name FROM ugc_users where id = '{user_invite}'")
			iduser_sellname = q.fetchone()[0]
			idubuyname = q.execute(f"SELECT name FROM ugc_users where id = '{user_create}'").fetchone()[0]
			uv_arb = q.execute("SELECT uv_arb FROM config  where id = "+str(1)).fetchone()[0]

# 			bot.send_message(uv_arb, f'''üî∞ –°–¥–µ–ª–∫–∞: #G{arbitras} –æ—Ç @{idubuyname} –¥–ª—è @{iduser_sellname}

# üí∞ –°—É–º–º–∞ —Å–¥–µ–ª–∫–∏: <code>{summa}</code> RUB

# ‚ôªÔ∏è –°—Ç–∞—Ç—É—Å: –ê—Ä–±–∏—Ç—Ä–∞–∂
# ''',parse_mode='HTML')

			bot.send_message(user_create, f'''üî∞ –°–¥–µ–ª–∫–∞: #G{arbitras} –æ—Ç @{idubuyname} –¥–ª—è @{iduser_sellname}

üí∞ –°—É–º–º–∞ —Å–¥–µ–ª–∫–∏: <code>{summa}</code> RUB

‚ôªÔ∏è –°—Ç–∞—Ç—É—Å: –ê—Ä–±–∏—Ç—Ä–∞–∂
	''',parse_mode='HTML', reply_markup=keyboards.main)
			bot.send_message(user_invite, f'''üî∞ –°–¥–µ–ª–∫–∞: #G{arbitras} –æ—Ç @{idubuyname} –¥–ª—è @{iduser_sellname}

üí∞ –°—É–º–º–∞ —Å–¥–µ–ª–∫–∏: <code>{summa}</code> RUB

‚ôªÔ∏è –°—Ç–∞—Ç—É—Å: –ê—Ä–±–∏—Ç—Ä–∞–∂
	''',parse_mode='HTML', reply_markup=keyboards.main)






	elif call.data[:14]  == "–≤–æ–∑–≤—Ä–∞—Ç—Å—Ä–µ–¥—Å—Ç–≤":
		idsdelkasaaa = call.data[14:]
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		status = q.execute(f'SELECT status FROM sdelki where id = "{idsdelkasaaa}"').fetchone()[0]
		if str(status) == str('–û–ø–ª–∞—á–µ–Ω–∞'):
			user_create = q.execute(f'SELECT user_create FROM sdelki where id = "{idsdelkasaaa}"').fetchone()[0]
			info = q.execute(f'SELECT info FROM sdelki where id = "{idsdelkasaaa}"').fetchone()[0]
			summa = q.execute(f'SELECT summa FROM sdelki where id = "{idsdelkasaaa}"').fetchone()[0]
			balance = summa
			q.execute("update ugc_users set balans = balans + "+str(summa)+" where id = " + str(user_create))
			connection.commit()
			q.execute(f"update sdelki set status = '–û—Ç–º–µ–Ω–µ–Ω–∞' where id = '{idsdelkasaaa}'")
			connection.commit()
			q.execute(f"SELECT name FROM ugc_users where id = '{call.message.chat.id}'")
			iduser_sellname = q.fetchone()[0]
			q.execute(f"SELECT name FROM ugc_users where id = '{user_create}'")
			idubuyname = q.fetchone()[0]
			q.execute("SELECT uv_sdelki FROM config  where id = "+str(1))
			uv_sdelki = q.fetchone()[0]
			bot.send_message(uv_sdelki, f'''üî∞ –°–¥–µ–ª–∫–∞: #G{idsdelkasaaa} –æ—Ç–º–µ–Ω–µ–Ω–∞!
–û—Ç @{idubuyname} –¥–ª—è @{iduser_sellname}
üí∞ –°—É–º–º–∞ —Å–¥–µ–ª–∫–∏: {summa} RUB''',parse_mode='HTML')
			bot.send_message(call.message.chat.id, f'''‚ùå –°–¥–µ–ª–∫–∞: #G{idsdelkasaaa} –æ—Ç @{idubuyname} –¥–ª—è @{iduser_sellname}  –æ—Ç–º–µ–Ω–µ–Ω–∞ !''',parse_mode='HTML', reply_markup=keyboards.main)
			bot.send_message(user_create, f'''‚ùå –°–¥–µ–ª–∫–∞: #G{idsdelkasaaa} –æ—Ç @{idubuyname} –¥–ª—è @{iduser_sellname}  –æ—Ç–º–µ–Ω–µ–Ω–∞ –∏ {summa} RUB –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –±–∞–ª–∞–Ω—Å !''',parse_mode='HTML', reply_markup=keyboards.main)

	elif call.data[:14]  == "–ø—Ä–æ—Å–º–æ—Ç—Ä—Å–¥–µ–ª–∫–∏":
		prosmotridsdelka = call.data[14:]
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute(f"SELECT * FROM sdelki where id = '{prosmotridsdelka}'")
		info = q.fetchall()
		keyboard = types.InlineKeyboardMarkup()
		for i in info:
			if str(i[5]) == str('–ê—Ä–±–∏—Ç—Ä–∞–∂'):
				summa = q.execute(f'SELECT summa FROM sdelki where id = "{i[0]}"').fetchone()[0]
				balance = i[6]
				curse = requests.get('https://blockchain.info/ticker').json()['RUB']['last']
				summarub = float(balance)*float(curse)
				q.execute(f"SELECT name FROM ugc_users where id = '{i[2]}'")
				iduser_sellname = q.fetchone()[0]
				q.execute(f"SELECT name FROM ugc_users where id = '{i[1]}'")
				idubuyname = q.fetchone()[0]
				keyboard = types.InlineKeyboardMarkup()
				q.execute("SELECT url_ard FROM config  where id = "+str(1))
				url_ard = q.fetchone()[0]
				keyboard = types.InlineKeyboardMarkup()
				keyboard.add(types.InlineKeyboardButton(text='–ù–∞–ø–∏—Å–∞—Ç—å –∞—Ä–±–∏—Ç—Ä—É',url=url_ard))
				bot.send_message(call.message.chat.id, f'''üî∞ –°–¥–µ–ª–∫–∞: #G{i[0]} –æ—Ç @{idubuyname} –¥–ª—è @{iduser_sellname}

üí∞ –°—É–º–º–∞ —Å–¥–µ–ª–∫–∏: <code>{i[6]}</code> RUB

‚ôªÔ∏è –°—Ç–∞—Ç—É—Å: –ê—Ä–±–∏—Ç—Ä–∞–∂''',parse_mode='HTML', reply_markup=keyboards.main)


			if str(i[5]) == str('–û–ø–ª–∞—á–µ–Ω–∞'):
				if int(i[1]) == int(call.message.chat.id):
					q.execute(f"SELECT name FROM ugc_users where id = '{i[2]}'")
					iduser_sellname = q.fetchone()[0]
					q.execute(f"SELECT name FROM ugc_users where id = '{i[1]}'")
					idubuyname = q.fetchone()[0]
					balance = i[6]
					curse = requests.get('https://blockchain.info/ticker').json()['RUB']['last']
					summarub = float(balance)*float(curse)
					summa = q.execute(f'SELECT summa FROM sdelki where id = "{i[0]}"').fetchone()[0]
					ssssss = types.InlineKeyboardMarkup()
					ssssss.add(types.InlineKeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–µ–Ω—å–≥–∏ –ø—Ä–æ–¥–∞–≤—Ü—É',callback_data=f'–æ—Ç–ø—Ä–∞–≤–∏—Ç—å–±–∞–±–∫–∏–ø—Ä–æ–¥–∞–≤—Ü—É{i[0]}'))
					ssssss.add(types.InlineKeyboardButton(text='–û—Ç–∫—Ä—ã—Ç—å –∞—Ä–±–∏—Ç—Ä–∞–∂',callback_data=f'–∞—Ä–±–∏—Ç—Ä–∞–∂{i[0]}'))

					bot.send_message(call.message.chat.id, f'''üî∞ –°–¥–µ–ª–∫–∞: #G{i[0]} –æ—Ç @{idubuyname}

üí∞ –°—É–º–º–∞ —Å–¥–µ–ª–∫–∏: <code>{summa}</code> RUB''',parse_mode='HTML', reply_markup=ssssss)
				else:
					q.execute(f"SELECT name FROM ugc_users where id = '{i[2]}'")
					iduser_sellname = q.fetchone()[0]
					q.execute(f"SELECT name FROM ugc_users where id = '{i[1]}'")
					idubuyname = q.fetchone()[0]
					summa = q.execute(f'SELECT summa FROM sdelki where id = "{i[0]}"').fetchone()[0]
					keyboard = types.InlineKeyboardMarkup()
					keyboard.add(types.InlineKeyboardButton(text='–û—Ç–∫—Ä—ã—Ç—å –∞—Ä–±–∏—Ç—Ä–∞–∂',callback_data=f'–∞—Ä–±–∏—Ç—Ä–∞–∂{i[0]}'))
					keyboard.add(types.InlineKeyboardButton(text='–í–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤',callback_data=f'–≤–æ–∑–≤—Ä–∞—Ç—Å—Ä–µ–¥—Å—Ç–≤{i[0]}'))
					bot.send_message(call.message.chat.id, f'''üî∞ –°–¥–µ–ª–∫–∞: #G{i[0]} –æ—Ç @{idubuyname}

üí∞ –°—É–º–º–∞ —Å–¥–µ–ª–∫–∏: <code>{summa}</code> RUB''',parse_mode='HTML', reply_markup=keyboard)


	elif call.data[:14]  == "–∑–∞–∫—Ä—ã—Ç—ã–µ—Å–¥–µ–ª–∫–∏":
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text='üõÉ–ö–∞–∫ –ø–æ–∫—É–ø–∞—Ç–µ–ª—å',callback_data=f'–∑–∞–∫—Å–¥–µ–ª{1}'))
		keyboard.add(types.InlineKeyboardButton(text='üõÇ–ö–∞–∫ –ø—Ä–æ–¥–∞–≤–µ—Ü',callback_data=f'–∑–∞–∫—Å–¥–µ–ª{2}'))
		bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏ —Ç–∏–ø —Å–¥–µ–ª–∫–∏', reply_markup=keyboard)

	elif call.data[:11]  == "–∑–∞–∫–∞—Ä–±–∏—Ç—Ä–∞–∂":
		idsdelkazak = call.data[11:]
		wdawdawdaw = idsdelkazak.split('\n')[2]
		colvoaktiv = idsdelkazak.split('\n')[1]
		sumpromo = idsdelkazak.split('\n')[0]
		print(colvoaktiv)
		print(sumpromo)
		print(wdawdawdaw)
		if int(wdawdawdaw) == 1:
			sssaa = '–≤ –ø–æ–ª—å–∑—É –ø–æ–∫—É–ø–∞—Ç–µ–ª—è'
		else:
			sssaa = '–≤ –ø–æ–ª—å–∑—É –ø—Ä–æ–¥–∞–≤—Ü–∞'
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute(f"update sdelki set status = '–ó–∞–∫—Ä—ã—Ç–∞' where id = '{colvoaktiv}'")
		connection.commit()
		q.execute(f"SELECT * FROM sdelki where id = '{colvoaktiv}'")
		info = q.fetchall()
		for i in info:
			q.execute(f"SELECT name FROM ugc_users where id = '{i[2]}'")
			iduser_sellname = q.fetchone()[0]
			q.execute(f"SELECT name FROM ugc_users where id = '{i[1]}'")
			idubuyname = q.fetchone()[0]
			balance = i[6]
			curse = requests.get('https://blockchain.info/ticker').json()['RUB']['last']
			summarub = float(balance)*float(curse)
			summa = q.execute(f'SELECT summa FROM sdelki where id = "{i[0]}"').fetchone()[0]
		q.execute("update ugc_users set balans = balans + "+str(i[6])+" where id = " + str(sumpromo))
		connection.commit()
		q.execute("SELECT uv_sdelki FROM config  where id = "+str(1))
		uv_sdelki = q.fetchone()[0]
		bot.send_message(i[1], f'''üî∞ –°–¥–µ–ª–∫–∞: #G{i[0]}.

‚ûñ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å: @{idubuyname}

‚ûñ –ü—Ä–æ–¥–∞–≤–µ—Ü: @{iduser_sellname}

üí∞ –°—É–º–º–∞: <code>{i[6]}</code> RUB

üìù –£—Å–ª–æ–≤–∏—è: <code>{i[7]}</code>

‚ôªÔ∏è –°—Ç–∞—Ç—É—Å: –ó–∞–∫—Ä—ã—Ç–∞ {sssaa} ''',parse_mode='HTML', reply_markup=keyboards.main)
		bot.send_message(i[2], f'''üî∞ –°–¥–µ–ª–∫–∞: #G{i[0]}.

‚ûñ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å: @{idubuyname}

‚ûñ –ü—Ä–æ–¥–∞–≤–µ—Ü: @{iduser_sellname}

üí∞ –°—É–º–º–∞: <code>{i[6]}</code> RUB

üìù –£—Å–ª–æ–≤–∏—è: <code>{i[7]}</code>

‚ôªÔ∏è –°—Ç–∞—Ç—É—Å: –ó–∞–∫—Ä—ã—Ç–∞ {sssaa}''',parse_mode='HTML', reply_markup=keyboards.main)


	elif call.data[:8]  == "aaadddd_":
		idarbysd = call.data[8:]
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute(f"SELECT * FROM sdelki where id = '{idarbysd}'")
		info = q.fetchall()
		keyboard = types.InlineKeyboardMarkup()
		
		for i in info:
			q.execute(f"SELECT name FROM ugc_users where id = '{i[2]}'")
			iduser_sellname = q.fetchone()[0]
			q.execute(f"SELECT name FROM ugc_users where id = '{i[1]}'")
			idubuyname = q.fetchone()[0]
			balance = i[6]
			curse = requests.get('https://blockchain.info/ticker').json()['RUB']['last']
			summarub = float(balance)*float(curse)
			summa = q.execute(f'SELECT summa FROM sdelki where id = "{i[0]}"').fetchone()[0]
		keyboard.add(types.InlineKeyboardButton(text='–ó–∞–∫—Ä—ã—Ç—å –≤ –ø–æ–ª—å–∑—É –ø–æ–∫—É–ø–∞—Ç–µ–ª—è',callback_data=f'–∑–∞–∫–∞—Ä–±–∏—Ç—Ä–∞–∂{i[1]}\n{idarbysd}\n{1}'))
		keyboard.add(types.InlineKeyboardButton(text='–ó–∞–∫—Ä—ã—Ç—å –≤ –ø–æ–ª—å–∑—É –ø—Ä–æ–¥–∞–≤—Ü–∞',callback_data=f'–∑–∞–∫–∞—Ä–±–∏—Ç—Ä–∞–∂{i[2]}\n{idarbysd}\n{2}'))

		bot.send_message(call.message.chat.id, f'''üî∞ –°–¥–µ–ª–∫–∞: #G{i[0]}.

‚ûñ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å: @{idubuyname}

‚ûñ –ü—Ä–æ–¥–∞–≤–µ—Ü: @{iduser_sellname}

üí∞ –°—É–º–º–∞: <code>{i[6]}</code> RUB

üìù –£—Å–ª–æ–≤–∏—è: <code>{i[7]}</code>

‚ôªÔ∏è –°—Ç–∞—Ç—É—Å: –ê—Ä–±–∏—Ç—Ä–∞–∂''',parse_mode='HTML', reply_markup=keyboard)

	elif call.data[:14] == '–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å_':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("SELECT status FROM ugc_users where id = "+ str(call.data[14:]))
		roww = q.fetchone()[0]
		if roww == '–ê–∫—Ç–∏–≤–µ–Ω':
			q.execute(f"update ugc_users set status = '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω' where id = {call.data[14:]}")
			connection.commit()
			bot.answer_callback_query(callback_query_id=call.id, text="‚úÖ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
		else:
			q.execute(f"update ugc_users set status = '–ê–∫—Ç–∏–≤–µ–Ω' where id = {call.data[14:]}")
			connection.commit()
			bot.answer_callback_query(callback_query_id=call.id, text="‚úÖ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")

	elif call.data[:14]  == "–∞—Ä–±–∏—Ç—Ä—ã—É–¥–∞–ª–∏—Ç—å":
		#awcawc == call.data[14:]
		msg = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ id", reply_markup = keyboards.otmena)
		bot.register_next_step_handler(msg,new_admin)

	elif call.data[:14]  == "—Å—Ö–µ–º–∞—Ä–∞–±–æ—Ç—ã":
		bot.send_message(call.message.chat.id, '''üìñ–°—Ö–µ–º–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∞ —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º:

1. ‚úÖ–ü–æ–∫—É–ø–∞—Ç–µ–ª—å –ø–æ–ø–æ–ª–Ω—è–µ—Ç —Å–≤–æ–π —Å—á–µ—Ç –≤ –±–æ—Ç–µ –ª—é–±—ã–º –¥–æ—Å—Ç—É–ø–Ω—ã–º –∏ —É–¥–æ–±–Ω—ã–º –¥–ª—è —Å–µ–±—è —Å–ø–æ—Å–æ–±–æ–º.
2. ‚úÖ–ü–æ–∫—É–ø–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç –∫–Ω–æ–ø–∫—É ¬´–æ—Ç–∫—Ä—ã—Ç—å —Å–¥–µ–ª–∫—É¬ª.
3. ‚úÖ–ü–æ–∫—É–ø–∞—Ç–µ–ª—é –≤—ã—Å–≤–µ—á–∏–≤–∞–µ—Ç—Å—è –æ–∫–Ω–æ –≤–≤–æ–¥–∞ —é–∑–µ—Ä–Ω–µ–π–º–∞ –ø—Ä–æ–¥–∞–≤—Ü–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ —Å–¥–µ–ª–∫—É.
4. ‚úÖ–ü–æ—Å–ª–µ –≤–≤–æ–¥–∞ —é–∑–µ—Ä–Ω–µ–π–º–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—é –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —Å—É–º–º—É —Å–¥–µ–ª–∫–∏. –ü–æ–∫—É–ø–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –ø—Ä–æ–ø–∏—Å–∞—Ç—å —É—Å–ª–æ–≤–∏—è —Å–¥–µ–ª–∫–∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å, –∏–ª–∏ –∂–µ –≤—ã–±—Ä–∞—Ç—å —Å–¥–µ–ª–∫—É –±–µ–∑ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤.
5. ‚úÖ–ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–¥–∞–≤—Ü—É –ø—Ä–∏—Ö–æ–¥–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º —ç—Ç–∞–ø–µ —Å–¥–µ–ª–∫–∏, –∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –æ–∂–∏–¥–∞—Ç—å —Å–≤–æ–π —Ç–æ–≤–∞—Ä –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏.
6. ‚úÖ–ï—Å–ª–∏ —É—Å–ª–æ–≤–∏—è —Å–¥–µ–ª–∫–∏ —Å–æ–±–ª—é–¥–µ–Ω—ã –∏ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è —É—Å—Ç—Ä–æ–∏–ª —Ç–æ–≤–∞—Ä - –Ω–µ–æ–±—Ö–æ–¥–º–æ –æ—Ç–ø—É—Å—Ç–∏—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞.
7. ‚úÖ–ü—Ä–æ–¥–∞–≤—Ü—É –ø—Ä–∏—Ö–æ–¥–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —É—Å–ø–µ—à–Ω–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–¥–µ–ª–∫–∏, –ø–æ—Å–ª–µ —á–µ–≥–æ –ø—Ä–æ–¥–∞–≤–µ—Ü –∏–º–µ–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –ª—é–±—ã–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º.
üîÅ –ö–æ–º–∏—Å—Å–∏—è –±–æ—Ç–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: 7%.

üÜòüõÉ–í —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –ø–æ–∫—É–ø–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –æ—Å–ø–æ—Ä–∏—Ç—å —Å–¥–µ–ª–∫—É, –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏—è –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –æ–≥–æ–≤–æ—Ä–µ–Ω–Ω—ã–º–∏ –≤ —Å–¥–µ–ª–∫–µ, –ª–∏–±–æ –∂–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –ø—ã—Ç–∞—é—Ç—Å—è –æ–±–º–∞–Ω—É—Ç—å, –µ–º—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É ¬´–æ—Ç–∫—Ä—ã—Ç—å –∞—Ä–±–∏—Ç—Ä–∞–∂¬ª, –≤ —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã SAVE CLICK –æ—Ç–º–µ–Ω—è—Ç —Å–¥–µ–ª–∫—É –≤ –ø–æ–ª—å–∑—É –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –≤ —Ç–µ—á–µ–Ω–∏–∏ 10 –º–∏–Ω—É—Ç —Å –º–æ–º–µ–Ω—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏.

‚ùóÔ∏è–í–Ω–∏–º–∞–Ω–∏–µ! –°–¥–µ–ª–∫—É –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∞—Ç—å –ü–æ–∫—É–ø–∞—Ç–µ–ª—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–≤—à–∏—Å—å –ø–æ–∏—Å–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π! –≠—Ç–æ –≤–∞–∂–Ω—ã–π –º–æ–º–µ–Ω—Ç.

ü§ó–£–¥–∞—á–∏ –≤ —Å–¥–µ–ª–∫–∞—Ö!''', reply_markup = keyboards.main)

	elif call.data[:14]  == "–∏–Ω—Ñ–æ—á–∞—Ç":
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text='üìì–°—Ö–µ–º–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞',callback_data=f'—Å—Ö–µ–º–∞—Ä–∞–±–æ—Ç—ã'))
		bot.send_message(call.message.chat.id, '''ü§î–ü–æ—á–µ–º—É –≤—ã–≥–æ–¥–Ω–æ –≤–Ω–µ–¥—Ä—è—Ç—å SAVE CLICK –≤ —Å–≤–æ–π —á–∞—Ç?

üìâüòãüòé–ü—Ä–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ SAVE CLICK –≤ —á–∞—Ç –¥–µ–π—Å—Ç–≤—É–µ—Ç –ø–æ–Ω–∏–∂–µ–Ω–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è –Ω–∞ —Å–¥–µ–ª–∫–∏, –∞ –∏–º–µ–Ω–Ω–æ -2% –Ω–∞ —Å–¥–µ–ª–∫–∏.

üëØüí∞ü§ë–ü—Ä–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ SAVE CLICK –≤ —á–∞—Ç –≤–ª–∞–¥–µ–ª–µ—Ü —á–∞—Ç–∞ –º–æ–∂–µ—Ç –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ —Å–¥–µ–ª–∫–∞—Ö –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö –≤ —á–∞—Ç–µ. –≠—Ç–æ –∑–Ω–∞—á–∏—Ç –≤–ª–∞–¥–µ–ª–µ—Ü —á–∞—Ç–∞ –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å 0.5% –æ—Ç —Å—É–º–º—ã —Å–¥–µ–ª–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ —á–∞—Ç–µ –ø–æ–∂–∏–∑–Ω–µ–Ω–Ω–æ!


‚ùì–ö–∞–∫ –≤–Ω–µ–¥—Ä—è—Ç—å SAVE CLICK –≤ —á–∞—Ç –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ —Å–¥–µ–ª–∫–∞—Ö?

1Ô∏è‚É£ –í–ª–∞–¥–µ–ª—å—Ü—É —á–∞—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–π—Ç–∏ –≤ –º–µ–Ω—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ —á–∞—Ç, –Ω–∞–∂–∞–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é: ¬´–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ —á–∞—Ç¬ª

2Ô∏è‚É£ –î–∞–ª–µ–µ –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É ¬´–î–æ–±–∞–≤–∏—Ç—å —á–∞—Ç¬ª, –¥–∞–ª–µ–µ –¥–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –∞–¥–º–∏–Ω—ã –∏ —É–∫–∞–∂–∏—Ç–µ ID —á–∞—Ç–∞, —É–∑–Ω–∞—Ç—å –¥–µ–π—Å—Ç–≤—É—é—â–∏–π ID —á–∞—Ç–∞ –º–æ–∂–Ω–æ –≤ —Å–∞–º–æ–º —á–∞—Ç–µ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –±–æ—Ç–∞, –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—á–∏—Ç–∞–µ—Ç ID –∏ –≤—ã–¥–∞—Å—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –ï–≥–æ –∫–æ–ø–∏—Ä—É–µ—Ç–µ –∏ –≤—Å—Ç–∞–≤–ª—è–µ—Ç–µ –≤ –ø–æ–ª–µ, –≤ –±–æ—Ç–µ.

3Ô∏è‚É£ –ü–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è SAVE CLICK –≤ —á–∞—Ç –≤—ã–¥–∞–π—Ç–µ –∞–¥–º–∏–Ω—Å–∫–∏–µ –ø—Ä–∞–≤–∞.

4Ô∏è‚É£ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å–¥–µ–ª–∫—É –≤–Ω—É—Ç—Ä–∏ —á–∞—Ç–∞ –≤–∞–º –Ω—É–∂–Ω–æ –ø—Ä–æ–ø–∏—Å–∞—Ç—å —Å–¥–µ–ª–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
/garant @saveclickmemento 1000

5Ô∏è‚É£ –í —á–∞—Ç –ø—Ä–∏–¥–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ.

6Ô∏è‚É£ –î–∞–ª–µ–µ –≤—Å–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π —Å—Ö–µ–º–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞.''', reply_markup = keyboard)

	elif call.data[:14]  == "–¥–æ–±–∞–≤–∏—Ç—å–≤—á–∞—Ç":
		#awcawc == call.data[14:]
		msg = bot.send_message(call.message.chat.id, "‚ÑπÔ∏è –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ —á–∞—Ç –∏ –ø—Ä–∏—à–ª–∏—Ç–µ id –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç –±–æ—Ç:", reply_markup = keyboards.otmena)
		bot.register_next_step_handler(msg,new_chat)

	elif call.data[:16]  == "–∏–∑–º–µ–Ω–∏—Ç—å–∫–æ–º–º–∏—Å–∏—é":
		global comsa
		idedit = call.data[16:]
		if int(idedit) == 1:
			comsa = 'com_vvod'
		if int(idedit) == 2:
			comsa = 'com_vivod'
		if int(idedit) == 3:
			comsa = 'com_sdelka'
		msg = bot.send_message(call.message.chat.id, '''–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:''',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, comsaedit)

	elif call.data[:13]  == "–∏–∑–º–µ–Ω–∏—Ç—å—Ç–µ–∫—Å—Ç":
		global idtexts
		idtext = call.data[13:]
		if int(idtext) == 1:
			idtexts = 'texts'
		if int(idtext) == 2:
			idtexts = 'timess'
		if int(idtext) == 3:
			idtexts = 'photo'
		msg = bot.send_message(call.message.chat.id, '''–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:''',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, postedit)


	elif call.data[:20] == '—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–Ω–∞—Å—Ç—Ä–æ–π–∫–∞':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute("SELECT uv_dep FROM config  where id = "+str(1))
		uv_dep = q.fetchone()[0]
		q.execute("SELECT uv_arb FROM config  where id = "+str(1))
		uv_arb = q.fetchone()[0]
		q.execute("SELECT uv_sdelki FROM config  where id = "+str(1))
		uv_sdelki = q.fetchone()[0]
		q.execute("SELECT uv_vivod FROM config  where id = "+str(1))
		uv_vivod = q.fetchone()[0]
		q.execute("SELECT url_ard FROM config  where id = "+str(1))
		url_ard = q.fetchone()[0]
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –∏–¥ —Å–¥–µ–ª–æ–∫',callback_data=f'edituv{1}'))
		keyboard.add(types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –∏–¥ –∞—Ä–±–∏—Ç—Ä–∞–∂–µ–π',callback_data=f'edituv{2}'))
		bot.send_message(call.message.chat.id, f'''id –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:
–°–¥–µ–ª–∫–∞(–ù–æ–≤–∞—è/–ó–∞–∫—Ä—ã—Ç–∞):{uv_sdelki}
–°–¥–µ–ª–∫–∞(–ê—Ä–±–∏—Ç—Ä–∞–∂): {uv_arb}
''',parse_mode='HTML', reply_markup=keyboard)
		
	elif call.data == '–∏–∑–º–µ–Ω–∏—Ç—å—Ç–æ–∫–µ–Ω_':
		msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω –∫–∏–≤–∏: ',parse_mode='HTML')
		bot.register_next_step_handler(msg, new_token)

	elif call.data == '–∏–∑–º–µ–Ω–∏—Ç—å–Ω–æ–º–µ—Ä_':
		msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä: ',parse_mode='HTML')
		bot.register_next_step_handler(msg, new_phone)

	elif call.data[:6] == 'edituv':
		global conf_uvs
		awfawfwa = call.data[6:]

		if int(awfawfwa) == 1:
			conf_uvs = 'uv_sdelki'
		if int(awfawfwa) == 2:
			conf_uvs = 'uv_arb'
		if int(awfawfwa) == 3:
			conf_uvs = 'uv_dep'
		if int(awfawfwa) == 4:
			conf_uvs = 'uv_vivod'
		if int(awfawfwa) == 5:
			conf_uvs = 'url_ard'

		msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ –Ω–æ–≤—ã–π id (–ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–æ–º): ',parse_mode='HTML')
		bot.register_next_step_handler(msg, smena_id_uv)

	elif call.data[:15] == '–¥–æ–±–∞–≤–∏—Ç—å–±–∞–ª–∞–Ω—Å_':
		global id_user_edit_bal1
		id_user_edit_bal1 = call.data[15:]
		msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ —Å—É–º–º—É: ',parse_mode='HTML')
		bot.register_next_step_handler(msg, add_money2)
			
	elif call.data[:17] == 'admin_search_user':
		msg = bot.send_message(call.message.chat.id, f'<b>–í–≤–µ–¥–∏ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n(–í–≤–æ–¥–∏—Ç—å –Ω—É–∂–Ω–æ –±–µ–∑ @)</b>',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg,searchuserss)

	elif call.data[:6] == 'vivod_':
		global id_user_viplata
		global idvivod
		idvivod = call.data[6:]
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute(f"SELECT * FROM vivod where id = '{idvivod}'")
		row = q.fetchone()
		id_user_viplata = row[1]
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å',callback_data=f'–≤—ã–≤–æ–¥—ã—ã—ã1'))
		keyboard.add(types.InlineKeyboardButton(text='–û—Ç–∫–ª–æ–Ω–∏—Ç—å',callback_data=f'–≤—ã–≤–æ–¥—ã—ã—ã2'))
		bot.send_message(call.message.chat.id, f'''User: <code>{row[1]}</code>
–°—É–º–º–∞ —Å —É—á–µ—Ç–æ–º –∫–æ–º–∏—Å—Å–∏–π: <code>{row[2]}</code>

–ú–µ—Ç–æ–¥ –≤—ã–ø–ª–∞—Ç—ã: <code>{row[3]}</code>

–†–µ–∫–≤–∏–∑–∏—Ç—ã: <code>{row[5]}</code>
''',parse_mode='HTML', reply_markup=keyboard)

	elif call.data[:8] == '–≤—ã–≤–æ–¥—ã—ã—ã':
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		if int(call.data[8:]) == 1:
			q.execute(f"update vivod set status = 'off' where id = {idvivod}")
			connection.commit()
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ',callback_data=f'–û—Ç–ø—Ä–∞–≤–∏—Ç—å—Å–æ–æ–±—â–µ–Ω–∏–µ'))
			bot.send_message(call.message.chat.id, f'''‚úîÔ∏è –í—ã–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞''',parse_mode='HTML', reply_markup=keyboard)
			bot.send_message(id_user_viplata, f'''‚úîÔ∏è –í—ã–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞''',parse_mode='HTML', reply_markup=keyboards.main)
		if int(call.data[8:]) == 2:
			q.execute(f"update vivod set status = 'off' where id = {idvivod}")
			connection.commit()
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ',callback_data=f'–û—Ç–ø—Ä–∞–≤–∏—Ç—å—Å–æ–æ–±—â–µ–Ω–∏–µ'))
			bot.send_message(call.message.chat.id, f'''‚úñÔ∏è –í—ã–ø–ª–∞—Ç–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞''',parse_mode='HTML', reply_markup=keyboard)
			bot.send_message(id_user_viplata, f'''‚úñÔ∏è –í—ã–ø–ª–∞—Ç–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞''',parse_mode='HTML', reply_markup=keyboards.main)

	elif call.data == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å—Å–æ–æ–±—â–µ–Ω–∏–µ':
		msg= bot.send_message(call.message.chat.id, "<b>–í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç</b>",parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, send_user)

	elif call.data == '–æ—Ç–∫—Ä—ã—Ç—å—Å–¥–µ–ª–∫—É—á–∞—Ç':
		pass


		
	elif call.data[:8] == '–†–∞—Å—Å—ã–ª–∫–∞':
		global tipsend
		tipsend = call.data[8:]
		msg= bot.send_message(call.message.chat.id, "<b>–í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏</b>",parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, send_photoorno)
			
	elif call.data[:7]  == "–∑–∞–∫—Å–¥–µ–ª":
		ctosdelka = call.data[7:]
		if int(ctosdelka) == 1:
			status = 'user_create'
		else:
			status = 'user_invite'
		connection = sqlite3.connect('database.sqlite')
		q = connection.cursor()
		q.execute(f"SELECT * FROM sdelki where {str(status)} = '{call.message.chat.id}'")
		info = q.fetchall()
		rand = random.randint(10000000,99999999999)
		keyboard = types.InlineKeyboardMarkup()
		for i in info:
			if str(i[5]) == str('–ó–∞–∫—Ä—ã—Ç–∞'):
				q.execute(f"SELECT name FROM ugc_users where id = '{i[2]}'")
				iduser_sellname = q.fetchone()[0]
				q.execute(f"SELECT name FROM ugc_users where id = '{i[1]}'")
				idubuyname = q.fetchone()[0]
				doc = open(f'G{rand}.txt', 'a', encoding='utf8')
				doc.write(f'''ID: #G{i[0]} | –ü–æ–∫—É–ø–∞—Ç–µ–ª—å: @{idubuyname} | –ü—Ä–æ–¥–∞–≤–µ—Ü: @{iduser_sellname} | C—É–º–º–∞: {i[6]} | –î–∞—Ç–∞ {i[3]} | –°—Ç–∞—Ç—É—Å: {i[5]} \n''')
				doc.close()
				
			if str(i[5]) == str('–û—Ç–º–µ–Ω–µ–Ω–∞'):
				q.execute(f"SELECT name FROM ugc_users where id = '{i[2]}'")
				iduser_sellname = q.fetchone()[0]
				q.execute(f"SELECT name FROM ugc_users where id = '{i[1]}'")
				idubuyname = q.fetchone()[0]
				doc = open(f'G{rand}.txt', 'a', encoding='utf8')
				doc.write(f'''ID: #G{i[0]} | –ü–æ–∫—É–ø–∞—Ç–µ–ª—å: @{idubuyname} | –ü—Ä–æ–¥–∞–≤–µ—Ü: @{iduser_sellname} | C—É–º–º–∞: {i[6]} | –î–∞—Ç–∞ {i[3]} | –°—Ç–∞—Ç—É—Å: {i[5]} \n''')
				doc.close()
		try:
			file = open(f'G{rand}.txt', encoding='utf8')
			bot.send_document(call.message.chat.id,file, caption='–í–∞—à–∏ —Å–¥–µ–ª–∫–∏')
			file.close()
			os.remove(f'G{rand}.txt')
		except:
			bot.send_message(call.message.chat.id, '–°–¥–µ–µ–ª–∫–∏ –æ—Ç—Å—É–¥—Å—Ç–≤—É—é—Ç', reply_markup=keyboards.main)

		

















bot.polling(True)
